{"version":3,"sources":["components/icons/Material.js","components/card/Card.js","components/card/CardHeader.js","components/card/CardBody.js","components/card/CardAction.js","components/card/CardReveal.js","components/grid/GridRow.js","components/grid/GridItem.js","views/dashboard/components/custom-card/CustomCard.js","views/dashboard/components/custom-icon/CustomIcon.js","views/dashboard/components/total-customers/TotalCustomers.js","views/dashboard/components/total-products/TotalProducts.js","views/dashboard/components/total-orders/TotalOrders.js","views/dashboard/components/latest-sales/chart.js","components/buttons/Fab.js","components/buttons/Normal.js","components/buttons/Flat.js","components/buttons/SignInUp.js","utils/date-formatter.js","utils/deDuplicate.js","utils/activeRoute.js","utils/validate-user-form.js","views/dashboard/components/latest-sales/LatestSales.js","utils/dataset.js","service/client.js","service/auth/auth.js","views/dashboard/components/orders/columns.js","views/dashboard/components/orders/OrderTable.js","service/hooks/useGet.js","views/dashboard/Dashboard.js","views/employees/DeleteEmployee.js","views/employees/columns.js","views/employees/Table.js","components/material-fields/InputField.js","views/employees/AddForm.js","views/employees/Employees.js","views/customers/columns.js","views/customers/EmailForm.js","views/customers/EmailModal.js","views/customers/Table.js","views/customers/Customers.js","views/user-profile/EditForm.js","views/user-profile/UserProfile.js","views/products/columns.js","views/products/AddForm.js","views/products/ProductModal.js","views/products/Table.js","views/products/Products.js","components/collections/Collection.js","components/collections/CollectionItem.js","components/collections/CollectionHeader.js","views/categories/CategoryProductList.js","views/categories/AddEditCategory.js","views/categories/Categories.js","views/settings/EditAccountForm.js","views/settings/EditPassword.js","views/settings/Settings.js","layouts/admin/components/Footer.js","components/linear-progress/LinearProgress.js","routes/index.js","components/alert/Alert.js","components/modal/Modal.js","components/container/Container.js","components/user/customer/columns.js","components/user/customer/OrderTable.js","components/user/Profile.js","components/forms/LoginForm.js","components/forms/UserForm.js","views/store/Login.js","views/store/Dashboard.js","views/store/Register.js","service/checkout/checkout.js","utils/saveOrderId.js","views/store/CardSection.js","views/store/CheckoutForm.js","utils/removeCart.js","utils/getOrderId.js","utils/cartExists.js","utils/getCart.js","views/store/CheckoutView.js","views/store/routes.js","views/store/Navbar.js","views/store/Sidebar.js","views/store/Home.js","views/store/StoreRouting.js","App.js","serviceWorker.js","index.js"],"names":["Material","props","children","className","rest","clsx","Card","CardHeader","CardBody","CardAction","CardReveal","GridRow","classes","sm","md","lg","smOffset","mdOffset","lgOffset","s","m","l","sOffset","mOffset","lOffset","GridItem","CustomCard","title","count","style","display","fontWeight","styles","icon","width","height","textAlign","justifyContent","alignItems","color","CustomIcon","TotalCustomers","customerCount","TotalProducts","productCount","TotalOrders","orderCount","palette","primary","secondary","options","responsive","animation","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","borderColor","backgroundColor","titleFontColor","bodyFontColor","footerFontColor","layout","padding","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","Fab","Normal","textTransform","Flat","SignInUp","date","format","moment","list","reduce","previous","current","accumulator","indexOf","push","activeRoute","routeName","urlParts","split","window","location","href","endsWith","length","values","errors","email","test","username","phone","city","state","zip","isNaN","join","header","LatestSales","sales","loadMore","loading","React","useState","pagedData","setPagedData","currentPage","setCurrentPage","totalPages","Math","ceil","data","useEffect","start","end","slice","next","labels","map","value","dateFormatter","createdAt","datasets","label","qty","profit","dataset","disabled","onClick","meta","hasNext","nextCursor","authToken","axios","create","baseURL","headers","authorization","getUserData","user","role","access_token","JSON","parse","localStorage","getItem","e","Alert","message","console","log","isLoggedIn","isAdmin","isCustomer","authUser","signOut","removeItem","saveUser","setItem","stringify","isHomeRoute","pathname","columns","name","selector","sortable","orders","setOrders","setLoading","client","get","params","relation","then","res","transformedOrders","order","customer","catch","LinearProgress","highlightOnHover","useGet","error","setError","setData","makeGetRequest","url","Dashboard","retrievedSales","useRef","deDuplicate","outDuration","cursor","Delete","deleting","data-position","data-tooltip","right","actions","openModal","Table","handleDelete","employees","item","edit","key","id","getEmployeeList","onSelectedRowsChange","pagination","noContextMenu","onRowClicked","row","InputField","labelClassName","styleLabel","htmlFor","defaultProps","login","marginBottom","marginTop","input","AddForm","handleAdd","closeModal","pass","setPass","initialValues","password","confirm","validate","onSubmit","setSubmitting","employee","post","newEmployee","response","isSubmitting","submitForm","autoComplete","autoFocus","component","type","EmployeesList","setDeleting","modal","elems","document","querySelectorAll","instances","M","Modal","init","tooltip","Tooltip","close","open","delete","filter","recipients","resize","EmailForm","selectedRows","setRecipients","subject","setSubject","setMessage","onChange","target","undefined","recipientEmails","Array","isArray","EmailModal","Actions","handleLoadMore","loadingMore","contextAction","setSelectedRows","history","useHistory","customers","getCustomerList","hasMore","contextActions","selectableRows","pointerOnHover","selectableRowsHighlight","CustomerList","allCus","EditForm","updateUser","updatedAt","validateUserForm","put","UserProfile","editedUser","Profile","description","price","available","total","category","updateProductList","file","setFile","categories","setCategories","handleInput","files","formData","FormData","append","cat","as","onInput","ProductModal","getProductList","ProductList","allProducts","product","Collection","CollectionItem","CollectionHeader","CategoryProductList","productList","products","listItem","AddEditCategory","handleSaveChanges","handleSave","categoryValue","setCategoryValue","placeholder","event","Categories","editableCategory","setEditableCategory","categoryList","newCategoryList","EditAccountForm","paddingTop","paddingBottom","address","EditPassword","setTimeout","Settings","Footer","Date","getFullYear","toast","html","Container","OrderTable","items","clickedRow","setClickedRow","activator","orderList","i","getOrderList","ref","click","amount","status","currency","userField","localUser","Username","Email","Phone","City","State","Zip","Object","keys","userDetail","replace","borderRadius","boxSizing","fontSize","LoginForm","handleSubmit","useLocation","handleRegisterClick","isAdminRoute","UserForm","inputStyle","Login","body","classList","remove","trim","action","Register","marginRight","useCheckout","setResponse","checkout","stripe","card","intentOptions","httpClient","requestForIntent","orderId","confirmOptions","client_secret","confirmCardPayment","payment_method","billing_details","postal_code","confirmPayment","result","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","invalid","iconColor","CardSection","CheckoutForm","useStripe","elements","useElements","createOrder","cart","a","preventDefault","getElement","CardElement","Fragment","stripePromise","loadStripe","Checkout","CheckoutView","Navbar","routes","route","activeClassName","to","exact","data-target","Sidenav","closeSidenav","active","Home","sideNav","routeList","path","render","isFromStore","App","StoreRouting","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e214e40e.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Material = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<i className={clsx(['material-icons', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</i>\r\n\t);\r\n};\r\n\r\nMaterial.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Material;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCard.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardHeader = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-title', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardHeader.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardHeader;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardBody = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-content', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardBody.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardBody;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardAction = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-action', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardAction.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardAction;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardReveal = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-reveal', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardReveal.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardReveal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst GridRow = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<div className={clsx(['row', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nGridRow.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default GridRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst classes = ({ sm, md, lg, smOffset, mdOffset, lgOffset, className }) => {\r\n\tconst s = `s${sm}`;\r\n\tconst m = `m${md}`;\r\n\tconst l = `l${lg}`;\r\n\tconst sOffset = `offset-s${smOffset}`;\r\n\tconst mOffset = `offset-m${mdOffset}`;\r\n\tconst lOffset = `offset-l${lgOffset}`;\r\n\treturn clsx([\r\n\t\t'col',\r\n\t\t{ [s]: sm },\r\n\t\t{ [m]: md },\r\n\t\t{ [l]: lg },\r\n\t\t{ [sOffset]: smOffset },\r\n\t\t{ [mOffset]: mdOffset },\r\n\t\t{ [lOffset]: lgOffset },\r\n\t\tclassName,\r\n\t]);\r\n};\r\nconst GridItem = props => {\r\n\tconst { children, ...rest } = props;\r\n\treturn <div className={classes(rest)}>{children}</div>;\r\n};\r\n\r\nGridItem.propTypes = {\r\n\tsm: PropTypes.number,\r\n\tmd: PropTypes.number,\r\n\tlg: PropTypes.number,\r\n\tsmOffset: PropTypes.number,\r\n\tmdOffset: PropTypes.number,\r\n\tlgOffset: PropTypes.number,\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default GridItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card, CardBody } from 'components/card';\r\nimport { GridItem, GridRow } from 'components/grid';\r\n\r\nconst CustomCard = props => {\r\n\tconst { title, count, children, className } = props;\r\n\treturn (\r\n\t\t<Card className={className}>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={7}>\r\n\t\t\t\t\t\t<span style={{ display: 'block', fontWeight: 600 }}>{title}</span>\r\n\t\t\t\t\t\t<span style={{ fontWeight: 500 }}>{count}</span>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={5}>{children}</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<div className=\"card-metric-change increase green-text\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons left\">keyboard_arrow_down</i>\r\n\t\t\t\t\t\t\t50%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default CustomCard;\r\n\r\nCustomCard.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tcount: PropTypes.number.isRequired,\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n// <div className=\"card\">\r\n// \t<div className=\"card-stacked\">\r\n// \t\t<div className=\"card-metrics card-metrics-static\">\r\n// \t\t\t<div className=\"card-metric\">\r\n// \t\t\t\t<div className=\"card-metric-title\">{title}</div>\r\n// \t\t\t\t<div className=\"card-metric-value\">{count}</div>\r\n// \t\t\t\t<div className=\"card-metric-change increase\">\r\n// \t\t\t\t\t<i className=\"material-icons left\">keyboard_arrow_down</i>\r\n// \t\t\t\t\t50%\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t</div>\r\n// </div>;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst styles = {\r\n\ticon: {\r\n\t\twidth: '50px',\r\n\t\theight: '50px',\r\n\t\ttextAlign: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tcolor: '#fff',\r\n\t},\r\n};\r\n\r\nconst CustomIcon = ({ children, className }) => {\r\n\treturn (\r\n\t\t<MaterialIcon className={clsx(['circle', className])} style={styles.icon}>\r\n\t\t\t{children}\r\n\t\t</MaterialIcon>\r\n\t);\r\n};\r\n\r\nCustomIcon.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CustomIcon;\r\n","import React from 'react';\r\n\r\nimport CustomCard from '../custom-card/CustomCard';\r\nimport CustomIcon from '../custom-icon/CustomIcon';\r\n\r\nconst TotalCustomers = ({ customerCount }) => {\r\n\treturn (\r\n\t\t<CustomCard title=\"Total Customers\" count={customerCount}>\r\n\t\t\t<CustomIcon className=\"green\">people</CustomIcon>\r\n\t\t</CustomCard>\r\n\t);\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\n\r\nimport CustomCard from '../custom-card/CustomCard';\r\nimport CustomIcon from '../custom-icon/CustomIcon';\r\n\r\nconst TotalProducts = ({ productCount }) => {\r\n\treturn (\r\n\t\t<CustomCard title=\"Total Products\" count={productCount}>\r\n\t\t\t<CustomIcon className=\"red\">shopping_basket</CustomIcon>\r\n\t\t</CustomCard>\r\n\t);\r\n};\r\n\r\nexport default TotalProducts;\r\n","import React from 'react';\r\n\r\nimport CustomCard from '../custom-card/CustomCard';\r\nimport CustomIcon from '../custom-icon/CustomIcon';\r\n\r\nconst TotalOrders = ({ orderCount }) => {\r\n\treturn (\r\n\t\t<CustomCard title=\"Total Order\" count={orderCount}>\r\n\t\t\t<CustomIcon className=\"indigo\">insert_chart</CustomIcon>\r\n\t\t</CustomCard>\r\n\t);\r\n};\r\n\r\nexport default TotalOrders;\r\n","const palette = {\r\n\tprimary: {\r\n\t\tmain: '#3949ab',\r\n\t},\r\n\tneutral: '#e0e0e0',\r\n\tdivider: '#eeeeee',\r\n\twhite: '#ffffff',\r\n\ttext: {\r\n\t\tprimary: '#1e88e5',\r\n\t\tsecondary: '#2979ff',\r\n\t},\r\n};\r\n\r\nexport const options = {\r\n\tresponsive: true,\r\n\t// maintainAspectRatio: false,\r\n\tanimation: false,\r\n\t// legend: { display: false },\r\n\tcornerRadius: 20,\r\n\ttooltips: {\r\n\t\tenabled: true,\r\n\t\tmode: 'index',\r\n\t\tintersect: false,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: palette.divider,\r\n\t\tbackgroundColor: palette.white,\r\n\t\ttitleFontColor: palette.text.primary,\r\n\t\tbodyFontColor: palette.text.secondary,\r\n\t\tfooterFontColor: palette.text.secondary,\r\n\t},\r\n\tlayout: { padding: 0 },\r\n\tscales: {\r\n\t\txAxes: [\r\n\t\t\t{\r\n\t\t\t\tbarThickness: 12,\r\n\t\t\t\tmaxBarThickness: 10,\r\n\t\t\t\tbarPercentage: 0.5,\r\n\t\t\t\tcategoryPercentage: 0.5,\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tfontColor: palette.text.secondary,\r\n\t\t\t\t},\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\tdrawBorder: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tyAxes: [\r\n\t\t\t{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tfontColor: palette.text.secondary,\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t},\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tborderDash: [2],\r\n\t\t\t\t\tborderDashOffset: [2],\r\n\t\t\t\t\tcolor: palette.divider,\r\n\t\t\t\t\tdrawBorder: false,\r\n\t\t\t\t\tzeroLineBorderDash: [2],\r\n\t\t\t\t\tzeroLineBorderDashOffset: [2],\r\n\t\t\t\t\tzeroLineColor: palette.divider,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Fab = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button className={clsx(['btn-floating waves-effect waves-light', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nFab.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Fab;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Normal = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light', className])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nNormal.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Normal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Flat = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light btn-flat product-btn'])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nFlat.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Flat;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SignInUp = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light btn-flat ', { 'product-btn': !className }, className])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nSignInUp.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default SignInUp;\r\n","import moment from 'moment';\r\n\r\nexport default (date, format) => {\r\n\treturn moment(date).format(format ? format : 'DD-MM-YYYY');\r\n};\r\n","export default list => {\r\n\treturn list.reduce((previous, current) => {\r\n\t\tlet accumulator = previous;\r\n\t\tif (previous.indexOf(current) > -1) {\r\n\t\t\treturn previous;\r\n\t\t}\r\n\t\taccumulator.push(current);\r\n\t\treturn accumulator;\r\n\t}, []);\r\n};\r\n","const activeRoute = routeName => {\r\n\tconst urlParts = routeName.split('/');\r\n\treturn window.location.href.endsWith(urlParts[urlParts.length - 1]);\r\n};\r\nexport default activeRoute;\r\n","export default values => {\r\n\tconst errors = {};\r\n\tif (!values.email) {\r\n\t\terrors.email = 'Email is required';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\terrors.email = 'Invalid email address';\r\n\t} else if (!values.username) {\r\n\t\terrors.username = 'Username is required';\r\n\t} else if (!values.phone) {\r\n\t\terrors.phone = 'Phone is required';\r\n\t} else if (!values.city) {\r\n\t\terrors.city = 'City is required';\r\n\t} else if (!values.state) {\r\n\t\terrors.state = 'State is required';\r\n\t} else if (!values.zip) {\r\n\t\terrors.zip = 'Zip is required';\r\n\t} else if (isNaN(values.zip.split('-').join(''))) {\r\n\t\terrors.zip = 'Zip code must be a number';\r\n\t}\r\n\r\n\treturn errors;\r\n};\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { options } from './chart';\r\nimport { Card, CardBody, CardHeader } from 'components/card';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { Flat } from 'components/buttons';\r\nimport { dataset } from 'utils';\r\n\r\nconst style = {\r\n\theader: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n};\r\n\r\nconst LatestSales = ({ sales, loadMore, loading }) => {\r\n\tconst [pagedData, setPagedData] = React.useState();\r\n\tconst [currentPage, setCurrentPage] = React.useState(0);\r\n\r\n\tconst perPage = 7;\r\n\tconst totalPages = Math.ceil(sales.data.length / perPage);\r\n\r\n\tconst next = () => {\r\n\t\tlet start = perPage * currentPage;\r\n\t\tlet end = start + perPage;\r\n\t\treturn sales.data.slice(start, end);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlet values = next();\r\n\t\tsetPagedData(dataset(values));\r\n\t}, [currentPage]);\r\n\r\n\tconst handleNext = () => {\r\n\t\tsetCurrentPage(state => state + 1);\r\n\t};\r\n\tconst handlePrevious = () => {\r\n\t\tsetCurrentPage(state => state - 1);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{pagedData && (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardHeader style={style.header}>\r\n\t\t\t\t\t\t\tTotal Sales & Profit\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Flat disabled={currentPage === 0} onClick={handlePrevious}>\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon>chevron_left</MaterialIcon>\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat disabled={currentPage >= totalPages - 1} onClick={handleNext}>\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon>chevron_right</MaterialIcon>\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t{sales.meta.hasNext && (\r\n\t\t\t\t\t\t\t\t\t<Flat disabled={loading} onClick={() => loadMore(sales.meta.nextCursor)}>\r\n\t\t\t\t\t\t\t\t\t\t<MaterialIcon>more</MaterialIcon>\r\n\t\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<Bar data={pagedData} options={options} />\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default LatestSales;\r\n","import dateFormatter from './date-formatter';\r\nexport default values => {\r\n\tconst labels = values.map(value => dateFormatter(value.createdAt, 'Do MMM'));\r\n\tconst datasets = [\r\n\t\t{\r\n\t\t\tlabel: 'Sales',\r\n\t\t\tbackgroundColor: '#3949ab',\r\n\t\t\tdata: values.map(value => value.qty),\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Profit($)',\r\n\t\t\tbackgroundColor: '#e0e0e0',\r\n\t\t\tdata: values.map(value => value.profit),\r\n\t\t},\r\n\t];\r\n\treturn { labels, datasets };\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default authToken => {\r\n\treturn axios.create({\r\n\t\tbaseURL: 'http://localhost:4000/api/v1',\r\n\t\theaders: {\r\n\t\t\tauthorization: 'Bearer ' + authToken,\r\n\t\t},\r\n\t});\r\n};\r\n","import { Alert } from 'components';\r\n\r\nconst getUserData = () => {\r\n\tlet data = { user: { role: '' }, access_token: '' };\r\n\ttry {\r\n\t\tdata = JSON.parse(localStorage.getItem('loggedIn_user'));\r\n\t\treturn data;\r\n\t} catch (e) {\r\n\t\tAlert({ message: e.message, color: 'red' });\r\n\t\tconsole.log('error getting user ', e);\r\n\t\treturn data;\r\n\t}\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n\tif (!getUserData()) return false;\r\n\treturn !!getUserData().access_token;\r\n};\r\n\r\nexport const isAdmin = () => {\r\n\tif (!isLoggedIn()) return false;\r\n\tconst userData = getUserData();\r\n\treturn userData.user.role === 'Admin';\r\n};\r\nexport const isCustomer = () => {\r\n\tif (!isLoggedIn()) return false;\r\n\tconst userData = getUserData();\r\n\treturn userData.user.role === 'Customer';\r\n};\r\n\r\nexport const hasOrders = () => {\r\n\tif (!isCustomer()) return false;\r\n\treturn !!getUserData().user.orders;\r\n};\r\nexport const isEmployee = () => {\r\n\tif (!isLoggedIn()) return false;\r\n\tconst userData = getUserData();\r\n\treturn userData.user.role === 'Employee';\r\n};\r\n\r\nexport const authToken = () => {\r\n\treturn getUserData().access_token;\r\n};\r\n\r\nexport const authUser = () => {\r\n\treturn getUserData().user;\r\n};\r\n\r\nexport const signOut = () => {\r\n\tlocalStorage.removeItem('loggedIn_user');\r\n};\r\n\r\nexport const saveUser = user => {\r\n\ttry {\r\n\t\tlocalStorage.setItem('loggedIn_user', JSON.stringify(user));\r\n\t} catch (e) {\r\n\t\tAlert({ message: e.message, color: 'red' });\r\n\t\tconsole.log('error parsing string ', e);\r\n\t}\r\n};\r\nexport const isFromStore = () => {\r\n\tconst cart = localStorage.getItem('user_from_store');\r\n\tif (cart) {\r\n\t\tlocalStorage.removeItem('user_from_store');\r\n\t}\r\n\treturn !!cart;\r\n};\r\nexport const isAdminRoute = location => {\r\n\treturn location.pathname === '/admin' || location.pathname === '/admin/';\r\n};\r\nexport const isHomeRoute = location => {\r\n\treturn location.pathname === '/';\r\n};\r\nexport const isCustomerRoute = location => {\r\n\treturn location.pathname === '/dashboard' || location.pathname === '/dashboard/';\r\n};\r\n","const columns = [\r\n\t{\r\n\t\tname: 'S/N',\r\n\t\tselector: 'id',\r\n\t\tsortable: true,\r\n\t},\r\n\r\n\t{\r\n\t\tname: 'Customer',\r\n\t\tselector: 'customer',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Quantity',\r\n\t\tselector: 'qty',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Status',\r\n\t\tselector: 'status',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Amount($)',\r\n\t\tselector: 'amount',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Card, CardHeader, CardReveal, CardBody } from 'components/card';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { Alert, LinearProgress } from 'components';\r\n\r\nimport client from 'service/client';\r\nimport { authToken } from 'service/auth/auth';\r\nimport { dateFormatter } from 'utils';\r\nimport columns from './columns';\r\n\r\nexport default () => {\r\n\tconst [orders, setOrders] = React.useState([]);\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.get('/orders', {\r\n\t\t\t\tparams: { relation: true },\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tconsole.log('res', res);\r\n\t\t\t\tconst transformedOrders = res.data.data.map(order => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...order,\r\n\t\t\t\t\t\tcustomer: order.user.username,\r\n\t\t\t\t\t\tcreatedAt: dateFormatter(order.createdAt),\r\n\t\t\t\t\t\tuser: null,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetOrders(transformedOrders);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<DataTable title={'Orders Summary'} columns={columns} data={orders} highlightOnHover />\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport client from '../client';\r\n\r\nconst useGet = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tconst makeGetRequest = ({ authToken, params, url }) => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken)\r\n\t\t\t.get(url, { params })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetData(res.data);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t};\r\n\treturn { makeGetRequest, setData, setError, setLoading, loading, error, data };\r\n};\r\n\r\nexport default useGet;\r\n","import React from 'react';\r\n\r\nimport TotalCustomers from './components/total-customers/TotalCustomers';\r\nimport TotalProducts from './components/total-products/TotalProducts';\r\nimport TotalOrders from './components/total-orders/TotalOrders';\r\nimport LatestSales from './components/latest-sales/LatestSales';\r\nimport Orders from './components/orders/OrderTable';\r\n\r\nimport { Card, CardAction, CardBody, CardHeader, CardReveal } from 'components/card';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { useGet } from 'service/hooks';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport { deDuplicate } from 'utils';\r\n\r\n// import { isAdmin, isCustomer, isEmployee, isLoggedIn } from 'service/auth/auth';\r\n\r\nconst styles = {\r\n\ticon: {\r\n\t\twidth: '50px',\r\n\t\theight: '50px',\r\n\t\ttextAlign: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tcolor: '#fff',\r\n\t},\r\n};\r\nconst Dashboard = () => {\r\n\tconst retrievedSales = React.useRef(null);\r\n\r\n\tconst { makeGetRequest, data, loading, error } = useGet();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/sales',\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tif (data) {\r\n\t\t// console.log('sales ', data);\r\n\t\tlet list;\r\n\t\tif (retrievedSales.current) {\r\n\t\t\tlist = [...retrievedSales.current.data, ...data.data];\r\n\t\t} else {\r\n\t\t\tlist = [...data.data];\r\n\t\t}\r\n\r\n\t\tretrievedSales.current = {\r\n\t\t\tdata: [...deDuplicate(list)],\r\n\t\t\tmeta: data.meta,\r\n\t\t};\r\n\t}\r\n\r\n\tconst loadMore = cursor => {\r\n\t\tconst options = {\r\n\t\t\turl: '/sales',\r\n\t\t\tparams: {\r\n\t\t\t\tcursor,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t<TotalCustomers customerCount={8473} />\r\n\t\t\t\t</GridItem>\r\n\r\n\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t<TotalProducts productCount={632} />\r\n\t\t\t\t</GridItem>\r\n\r\n\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t<TotalOrders orderCount={873} />\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t{retrievedSales.current && retrievedSales.current.data.length > 0 && (\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<LatestSales loading={loading} sales={retrievedSales.current} loadMore={loadMore} />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t)}\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t<Orders />\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nimport { Normal } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst Delete = ({ onClick, deleting }) => {\r\n\treturn (\r\n\t\t<Normal\r\n\t\t\tdisabled={deleting}\r\n\t\t\tclassName=\"tooltipped red-text btn-flat delete-btn\"\r\n\t\t\tdata-position=\"left\"\r\n\t\t\tdata-tooltip=\"Delete\"\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t<MaterialIcon children={'close'} />\r\n\t\t</Normal>\r\n\t);\r\n};\r\n\r\nexport default Delete;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'Username',\r\n\t\tselector: 'username',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Email',\r\n\t\tselector: 'email',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date Joined',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t\tright: true,\r\n\t},\r\n\t{\r\n\t\tselector: 'edit',\r\n\r\n\t\tright: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport Delete from './DeleteEmployee';\r\nimport { dateFormatter } from 'utils';\r\nimport { Normal } from 'components/buttons';\r\nimport { Card } from 'components/card';\r\n\r\nimport columns from './columns';\r\n\r\nconst actions = openModal => (\r\n\t<Normal onClick={() => openModal()} className=\"right-align indigo \">\r\n\t\tAdd\r\n\t</Normal>\r\n);\r\n\r\nconst Table = ({ data, handleDelete, loading, openModal }) => {\r\n\tconst handleChange = value => {\r\n\t\t// console.log('handle change called ', value);\r\n\t};\r\n\tconst handleRowClick = row => {\r\n\t\t// console.log('clicked row ', row);\r\n\t};\r\n\tconst getEmployeeList = data => {\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t\tedit: <Delete key={item.id} deleting={loading} onClick={() => handleDelete(item.id)} />,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst employees = data ? getEmployeeList(data) : [];\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Employee List\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={employees}\r\n\t\t\t\tonSelectedRowsChange={handleChange}\r\n\t\t\t\tactions={actions(openModal)}\r\n\t\t\t\tpagination\r\n\t\t\t\tnoContextMenu={true}\r\n\t\t\t\tonRowClicked={handleRowClick}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\nexport default Table;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst InputField = ({ id, labelClassName, styleLabel, label, ...rest }) => {\r\n\treturn (\r\n\t\t<div className={clsx(['input-field', { 'login-label': styleLabel }])}>\r\n\t\t\t<Field {...rest} id={id} />\r\n\t\t\t{id && label && (\r\n\t\t\t\t<label className={labelClassName} htmlFor={id}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nInputField.defaultProps = {\r\n\tlabelClassName: 'active',\r\n};\r\nInputField.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tlabelClassName: PropTypes.string,\r\n\tlabel: PropTypes.string,\r\n\tstyleLabel: PropTypes.string,\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst AddForm = ({ handleAdd, closeModal }) => {\r\n\tconst [pass, setPass] = React.useState('');\r\n\r\n\tconst validateForm = values => {\r\n\t\tsetPass(values.password);\r\n\t\tconst errors = {};\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Email Required';\r\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\terrors.email = 'Invalid email address';\r\n\t\t} else if (!values.username) {\r\n\t\t\terrors.username = 'Username Required';\r\n\t\t} else if (!values.password) {\r\n\t\t\terrors.password = 'Password Required';\r\n\t\t} else if (values.password.length < 6) {\r\n\t\t\terrors.password = 'Password length must be greater than 5';\r\n\t\t} else if (!(values.confirm === pass)) {\r\n\t\t\terrors.confirm = 'Confirm password must match password field';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tconst employee = {\r\n\t\t\tusername: values.username,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\trole: 'Employee',\r\n\t\t};\r\n\t\tclient(authToken())\r\n\t\t\t.post('/users', { ...employee })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: 'Employee Successfully Added', color: 'green' });\r\n\t\t\t\tconst newEmployee = {\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\t...res.data,\r\n\t\t\t\t};\r\n\t\t\t\thandleAdd(newEmployee);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\r\n\t\t\t\tconsole.log(e.response);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ email: '', username: '', password: '', confirm: '' }}\r\n\t\t\t\tvalidate={validateForm}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"username\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"password\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"confirm\"\r\n\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tid=\"confirm\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"confirm\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<div className=\" right-align\">\r\n\t\t\t\t\t\t\t\t<Flat onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat type=\"button\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\n\r\nimport Table from './Table';\r\nimport AddForm from './AddForm';\r\n\r\nimport { LinearProgress, Alert, Modal, Container } from 'components';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { authToken } from 'service/auth/auth';\r\n\r\nimport client from 'service/client';\r\n\r\nconst EmployeesList = () => {\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\tconst [deleting, setDeleting] = React.useState(false);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/users',\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Employee',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t\tconst tooltip = document.querySelectorAll('.tooltipped');\r\n\t\t// eslint-disable-next-line\r\n\t\tM.Tooltip.init(tooltip);\r\n\t});\r\n\r\n\tconst handleAdd = employee => {\r\n\t\tcloseModal();\r\n\t\tsetData(state => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: [...state.data, employee],\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst handleDelete = id => {\r\n\t\tsetDeleting(true);\r\n\t\tclient(authToken())\r\n\t\t\t.delete(`/users/${id}`)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetDeleting(false);\r\n\t\t\t\tsetData(state => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tdata: state.data.filter(user => user.id !== id),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tAlert({ message: 'Successfully Deleted', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetDeleting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t};\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{deleting && <LinearProgress />}\r\n\t\t\t<Modal title=\"Add Employee\">\r\n\t\t\t\t<AddForm handleAdd={handleAdd} closeModal={closeModal} />\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Table openModal={openModal} data={data ? data.data : []} handleDelete={handleDelete} loading={deleting} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default EmployeesList;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'Username',\r\n\t\tselector: 'username',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Email',\r\n\t\tselector: 'email',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Address',\r\n\t\tselector: 'address',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date Joined',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t\t\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst styles = {\r\n\trecipients: {\r\n\t\tresize: 'auto',\r\n\t},\r\n};\r\nconst EmailForm = ({ closeModal, selectedRows }) => {\r\n\tconst [recipients, setRecipients] = React.useState(selectedRows ? selectedRows : ' ');\r\n\tconst [subject, setSubject] = React.useState('');\r\n\tconst [message, setMessage] = React.useState('');\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\r\n\tconst handleOnChange = e => {\r\n\t\tsetRecipients(e.target.value);\r\n\t};\r\n\tconst handleSendEmail = () => {\r\n\t\tif (subject === '' || subject === undefined || message === '' || message === undefined) {\r\n\t\t\tAlert({ message: 'Subject and message fields must be filled in', color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet recipientEmails;\r\n\t\tif (Array.isArray(recipients)) recipientEmails = recipients;\r\n\t\telse {\r\n\t\t\trecipientEmails = recipients.split(',');\r\n\t\t}\r\n\t\tconst email = {\r\n\t\t\tname: 'Tony Smith',\r\n\t\t\temail: 'tonysmith@gmail.com',\r\n\t\t\tsubject,\r\n\t\t\trecipients: recipientEmails,\r\n\t\t\tmessage,\r\n\t\t};\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.post('/email', {\r\n\t\t\t\t...email,\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Email message successfully sent', color: 'green' });\r\n\t\t\t\tconsole.log('res', res);\r\n\t\t\t\tcloseModal();\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetRecipients(selectedRows);\r\n\t}, [selectedRows]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} className=\"input-field\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"email-ids\"\r\n\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\tvalue={recipients ? recipients : ''}\r\n\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\tstyle={styles.recipients}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<label className=\"active\" htmlFor=\"email-ids\">\r\n\t\t\t\t\t\tRecipients\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} className=\"input-field\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"subject\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"validate\"\r\n\t\t\t\t\t\tvalue={subject}\r\n\t\t\t\t\t\tonChange={e => setSubject(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"subject\">Subject</label>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} className=\"input-field\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\tonChange={e => setMessage(e.target.value)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<label htmlFor=\"message\">Message</label>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<div className=\"row right-align\">\r\n\t\t\t\t<Flat onClick={handleSendEmail}>Send</Flat>\r\n\t\t\t\t<Flat onClick={() => closeModal()}>Cancel</Flat>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EmailForm;\r\n","import React from 'react';\r\n\r\nimport { Modal } from 'components';\r\nimport EmailForm from './EmailForm';\r\n\r\nconst EmailModal = ({ closeModal, selectedRows }) => {\r\n\treturn (\r\n\t\t<Modal title=\"Send Email to Selected Customer(s)\" id=\"send-email-modal\">\r\n\t\t\t<EmailForm closeModal={closeModal} selectedRows={selectedRows} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default EmailModal;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Card } from 'components/card';\r\nimport { Normal } from 'components/buttons';\r\n\r\nimport { dateFormatter } from 'utils';\r\nimport columns from './columns';\r\n\r\nimport EmailModal from './EmailModal';\r\n\r\nconst Actions = ({ handleLoadMore, loadingMore }) => (\r\n\t<Normal disabled={loadingMore} onClick={handleLoadMore} className=\"right indigo\">\r\n\t\tLoad more\r\n\t</Normal>\r\n);\r\n\r\nconst contextAction = ({ openModal }) => {\r\n\treturn (\r\n\t\t<Normal className=\"indigo\" onClick={openModal}>\r\n\t\t\tSend Email\r\n\t\t</Normal>\r\n\t);\r\n};\r\nconst Table = ({ response, loadMore, loadingMore }) => {\r\n\tconst { data, meta } = response;\r\n\r\n\tconst [selectedRows, setSelectedRows] = React.useState(null);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\r\n\tconst handleChange = value => {\r\n\t\tsetSelectedRows(value);\r\n\t};\r\n\r\n\tconst getCustomerList = data => {\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst hasMore = meta => {\r\n\t\treturn meta.hasNext;\r\n\t};\r\n\tconst handleRowClicked = row => {\r\n\t\thistory.push('/admin/customers/' + row.id);\r\n\t};\r\n\tconst handleLoadMore = () => {\r\n\t\tloadMore(meta.nextCursor);\r\n\t};\r\n\tconst getEmailsOfSelectedRows = () => {\r\n\t\treturn selectedRows && selectedRows.selectedRows.map(row => row.email);\r\n\t};\r\n\tconst customers = data.length > 0 ? getCustomerList(data) : [];\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<EmailModal closeModal={closeModal} selectedRows={getEmailsOfSelectedRows()} />\r\n\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Customer List\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={customers}\r\n\t\t\t\tactions={hasMore(meta) && <Actions loadingMore={loadingMore} handleLoadMore={handleLoadMore} />}\r\n\t\t\t\tonSelectedRowsChange={handleChange}\r\n\t\t\t\tcontextActions={contextAction({ openModal })}\r\n\t\t\t\tselectableRows\r\n\t\t\t\thighlightOnHover\r\n\t\t\t\tpagination\r\n\t\t\t\tpointerOnHover\r\n\t\t\t\tonRowClicked={handleRowClicked}\r\n\t\t\t\tselectableRowsHighlight\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { useGet } from 'service/hooks';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport { deDuplicate } from 'utils';\r\n\r\nimport Table from './Table';\r\n\r\nconst CustomerList = () => {\r\n\tconst dataStruct = {\r\n\t\tdata: [],\r\n\t\tmeta: {},\r\n\t};\r\n\tconst allCus = React.useRef(dataStruct);\r\n\r\n\tconst { makeGetRequest, data, loading, error } = useGet();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/users',\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tif (data) {\r\n\t\tconst list = [...allCus.current.data, ...data.data];\r\n\t\tallCus.current = {\r\n\t\t\tdata: [...deDuplicate(list)],\r\n\t\t\tmeta: data.meta,\r\n\t\t};\r\n\t}\r\n\r\n\tconst loadMore = cursor => {\r\n\t\tconst options = {\r\n\t\t\turl: '/users',\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t\tcursor,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Table loadingMore={loading} response={allCus.current} loadMore={loadMore} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CustomerList;\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { UserForm } from 'components';\r\nimport { authToken } from 'service/auth/auth';\r\nimport { validateUserForm } from 'utils';\r\nimport client from 'service/client';\r\n\r\nconst EditForm = ({ user, updateUser, closeModal }) => {\r\n\tdelete user.orders;\r\n\tdelete user.updatedAt;\r\n\tdelete user.createdAt;\r\n\r\n\tfor (let key in user) {\r\n\t\tif (user[key] === null) {\r\n\t\t\tuser[key] = '';\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateForm = values => {\r\n\t\treturn validateUserForm(values);\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tclient(authToken())\r\n\t\t\t.put(`/users/${values.id}`, { ...values })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tupdateUser(values);\r\n\t\t\t\tAlert({ message: 'Profile Successfully Edited', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('e ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik initialValues={{ ...user }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<UserForm />\r\n\t\t\t\t\t\t\t<div className=\" right-align\">\r\n\t\t\t\t\t\t\t\t<Flat onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat type=\"button\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default EditForm;\r\n","import React from 'react';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { LinearProgress, Alert, Modal, Profile, Container } from 'components';\r\nimport EditForm from './EditForm';\r\n\r\nimport { authUser, isCustomer, authToken, isAdmin } from 'service/auth/auth';\r\n\r\nconst UserProfile = () => {\r\n\tconst { id } = authUser();\r\n\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: `/users/${id}/orders`,\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, [id]);\r\n\t// if (data) {\r\n\t// \tconsole.log('fetched user', data);\r\n\t// }\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\tconst updateUser = editedUser => {\r\n\t\tsetData({\r\n\t\t\t...data,\r\n\t\t\tdata: { ...data.data, ...editedUser },\r\n\t\t});\r\n\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Modal title=\"Edit Profile Info\">\r\n\t\t\t\t{authUser() ? (\r\n\t\t\t\t\t<EditForm closeModal={closeModal} updateUser={updateUser} user={{ ...authUser() }} />\r\n\t\t\t\t) : null}\r\n\t\t\t</Modal>\r\n\t\t\t<Profile user={data && data.data} isCustomer={isCustomer()} isAdmin={isAdmin()} openModal={openModal} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UserProfile;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'Name',\r\n\t\tselector: 'name',\r\n\t\tsortable: true,\r\n\t},\r\n\r\n\t{\r\n\t\tname: 'Available',\r\n\t\tselector: 'available',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Category',\r\n\t\tselector: 'category',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Price',\r\n\t\tselector: 'price',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date Added',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t\tright: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tprice: '',\r\n\tavailable: '',\r\n\ttotal: '',\r\n\tcategory: '',\r\n};\r\nconst AddForm = ({ updateProductList, closeModal }) => {\r\n\tconst [file, setFile] = React.useState(null);\r\n\tconst [categories, setCategories] = React.useState([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tclient(authToken())\r\n\t\t\t.get('/categories')\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetCategories(res.data.data);\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.name) {\r\n\t\t\terrors.name = 'Name of product is required';\r\n\t\t} else if (!values.description) {\r\n\t\t\terrors.description = 'Description of product is required';\r\n\t\t} else if (!values.price) {\r\n\t\t\terrors.price = 'Price of product is required';\r\n\t\t} else if (!values.total) {\r\n\t\t\terrors.total = 'Quantity of product is required';\r\n\t\t} else if (!values.category) {\r\n\t\t\terrors.category = 'Category of product is required';\r\n\t\t} else if (!values.available) {\r\n\t\t\terrors.available = 'Product availability is required';\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tconst url = '/products';\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'multipart/form-data',\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', file);\r\n\t\tfor (let key in values) {\r\n\t\t\tif (key === 'category') {\r\n\t\t\t\tconst category = categories.filter(cat => cat.name === values[key]);\r\n\t\t\t\tformData.append(key, category[0].id);\r\n\t\t\t} else {\r\n\t\t\t\tformData.append(key, values[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tclient(authToken())\r\n\t\t\t.post(url, formData, config)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: 'Product successfully Added', color: 'green' });\r\n\t\t\t\tupdateProductList({\r\n\t\t\t\t\t...res.data,\r\n\t\t\t\t\t...values,\r\n\t\t\t\t});\r\n\t\t\t\tcloseModal();\r\n\r\n\t\t\t\tconsole.log('res for upload ', res);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tconsole.log(e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleInput = e => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t\tconsole.log(e.target.files[0]);\r\n\t};\r\n\r\n\tconst options =\r\n\t\tcategories.length > 0 ? (\r\n\t\t\tcategories.map(category => (\r\n\t\t\t\t<option key={category.id} value={category.name}>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</option>\r\n\t\t\t))\r\n\t\t) : (\r\n\t\t\t<option value=\"\">No categories added yet!</option>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik initialValues={{ ...initialValues }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"name\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"description\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"total\"\r\n\t\t\t\t\t\t\t\tname=\"total\"\r\n\t\t\t\t\t\t\t\tlabel=\"Quantity\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"total\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"price\"\r\n\t\t\t\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\t\t\t\tlabel=\"Price\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"price\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<Field name=\"category\" as=\"select\" style={{ display: 'block', backgroundColor: 'inherit' }}>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Select Category</option>\r\n\t\t\t\t\t\t\t\t{options}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"category\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"available\"\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'block', backgroundColor: 'inherit', marginTop: 15 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Available?</option>\r\n\t\t\t\t\t\t\t\t<option value=\"1\">True</option>\r\n\t\t\t\t\t\t\t\t<option value=\"0\">False</option>\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"category\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t\t\t\t<div className=\"btn indigo\">\r\n\t\t\t\t\t\t\t\t\t<span>Photo</span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"file\" onInput={handleInput} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" onInput={handleInput} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\" right-align\" style={{ marginTop: 20 }}>\r\n\t\t\t\t\t\t\t\t<Flat onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat disabled={isSubmitting} type=\"button\" onClick={() => closeModal()}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\n\r\nimport { Modal } from 'components';\r\nimport AddForm from './AddForm';\r\n\r\nconst ProductModal = ({ closeModal, updateProductList }) => {\r\n\treturn (\r\n\t\t<Modal id=\"product-modal\" title=\"Add New Product\">\r\n\t\t\t<AddForm closeModal={closeModal} updateProductList={updateProductList} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ProductModal;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport columns from './columns';\r\nimport ProductModal from './ProductModal';\r\n\r\nimport { Card } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\n\r\n\r\nimport { dateFormatter } from 'utils';\r\n\r\nconst Table = ({ response, loadMore, loadingMore, updateProductList }) => {\r\n\tconst { data, meta } = response;\r\n\r\n\tconst [selectedRows, setSelectedRows] = React.useState(null);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\tconst actions = () => (\r\n\t\t<div>\r\n\t\t\t{hasMore(meta) && (\r\n\t\t\t\t<Flat\r\n\t\t\t\t\tdisabled={loadingMore}\r\n\t\t\t\t\tonClick={handleLoadMore}\r\n\t\t\t\t\tclassName=\"right\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLoad more\r\n\t\t\t\t</Flat>\r\n\t\t\t)}\r\n\t\t\t<Flat\r\n\t\t\t\tdisabled={loadingMore}\r\n\t\t\t\tonClick={openModal}\r\n\t\t\t\tclassName=\"right\"\r\n\t\t\t>\r\n\t\t\t\tAdd Product\r\n\t\t\t</Flat>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst handleChange = value => {\r\n\t\tsetSelectedRows(value);\r\n\t};\r\n\r\n\tconst getProductList = data => {\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t\tcategory: item.category.name,\r\n\t\t\t\tavailable: item.available ? 'true' : 'false',\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst hasMore = meta => {\r\n\t\treturn meta.hasNext;\r\n\t};\r\n\tconst handleRowClicked = row => {\r\n\t\thistory.push('/admin/products/' + row.id);\r\n\t};\r\n\tconst handleLoadMore = () => {\r\n\t\tloadMore(meta.nextCursor);\r\n\t};\r\n\r\n\tconst customers = data.length > 0 ? getProductList(data) : [];\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<ProductModal closeModal={closeModal} updateProductList={updateProductList} />\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Product List\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={customers}\r\n\t\t\t\tactions={actions()}\r\n\t\t\t\tonSelectedRowsChange={handleChange}\r\n\t\t\t\thighlightOnHover\r\n\t\t\t\tpagination\r\n\t\t\t\tpointerOnHover\r\n\t\t\t\tonRowClicked={handleRowClicked}\r\n\t\t\t\tselectableRowsHighlight\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { useGet } from 'service/hooks';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\n\r\nimport Table from './Table';\r\n\r\nconst ProductList = () => {\r\n\tconst dataStruct = {\r\n\t\tdata: [],\r\n\t\tmeta: {},\r\n\t};\r\n\tconst allProducts = React.useRef(dataStruct);\r\n\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\r\n\tconst updateProductList = product => {\r\n\t\tsetData(state => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: [...state.data, product],\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/products',\r\n\t\t\tparams: {\r\n\t\t\t\trelation: true,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tconst deDuplicate = list => {\r\n\t\treturn list.reduce((previous, current) => {\r\n\t\t\tlet accumulator = previous;\r\n\t\t\tif (previous.indexOf(current) > -1) {\r\n\t\t\t\treturn previous;\r\n\t\t\t}\r\n\t\t\taccumulator.push(current);\r\n\t\t\treturn accumulator;\r\n\t\t}, []);\r\n\t};\r\n\tif (data) {\r\n\t\tconsole.log('products', data);\r\n\t\tconst list = [...allProducts.current.data, ...data.data];\r\n\t\tallProducts.current = {\r\n\t\t\tdata: [...deDuplicate(list)],\r\n\t\t\tmeta: data.meta,\r\n\t\t};\r\n\t}\r\n\r\n\tconst loadMore = cursor => {\r\n\t\tconst options = {\r\n\t\t\turl: '/products',\r\n\t\t\tparams: {\r\n\t\t\t\tcursor,\r\n\t\t\t\trelation: true,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\r\n\t\t\t<Table\r\n\t\t\t\tloadingMore={loading}\r\n\t\t\t\tupdateProductList={updateProductList}\r\n\t\t\t\tresponse={allProducts.current}\r\n\t\t\t\tloadMore={loadMore}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst Collection = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<ul className={clsx(['collection', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nCollection.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default Collection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst CollectionItem = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<li className={clsx(['collection-item', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nCollectionItem.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CollectionItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst CollectionHeader = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<li className={clsx(['collection-header', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nCollectionHeader.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CollectionHeader;\r\n","import React from 'react';\r\n\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst listItem = product => (\r\n\t<CollectionItem className=\"avatar\" key={product.id}>\r\n\t\t<p>\r\n\t\t\t<span className=\"title\">Name: </span>\r\n\t\t\t{product.name}\r\n\t\t\t<br />\r\n\t\t\t<span className=\"title\">Price: </span>\r\n\t\t\t{product.price}\r\n\t\t\t<br />\r\n\t\t\t<span className=\"title\">Still in Stock?: </span>\r\n\t\t\t{!!+product.available ? 'Yes' : 'No'}\r\n\t\t\t<br />\r\n\t\t\t<span className=\"title\">Quantity: </span>\r\n\t\t\t{product.total}\r\n\t\t\t<br />\r\n\t\t</p>\r\n\t\t<Flat className=\"secondary-content red-text delete-btn\">\r\n\t\t\t<MaterialIcon children={'close'} />\r\n\t\t</Flat>\r\n\t</CollectionItem>\r\n);\r\n\r\nconst CategoryProductList = ({ category }) => {\r\n\tconst productList =\r\n\t\tcategory.products.length > 0 ? (\r\n\t\t\tcategory.products.map(product => listItem(product))\r\n\t\t) : (\r\n\t\t\t<CollectionItem>No product under {category.name} category</CollectionItem>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Collection className=\"with-header \" style={{ marginTop: 60 }}>\r\n\t\t\t<CollectionHeader className=\"indigo-text center-align\">\r\n\t\t\t\t<h6>Products on {category.name} Category</h6>\r\n\t\t\t</CollectionHeader>\r\n\t\t\t{productList}\r\n\t\t</Collection>\r\n\t);\r\n};\r\n\r\nexport default CategoryProductList;\r\n","import React from 'react';\r\n\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport CategoryProductList from './CategoryProductList';\r\n\r\nconst AddEditCategory = ({ category, handleSaveChanges, handleDelete, loading, handleSave }) => {\r\n\tconst [categoryValue, setCategoryValue] = React.useState(category);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetCategoryValue(category);\r\n\t}, [category]);\r\n\r\n\tconst handleOnChange = event => {\r\n\t\tconst target = event.target;\r\n\t\tsetCategoryValue(state => ({\r\n\t\t\t...state,\r\n\t\t\tname: target.value,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleOnSaveChangesClicked = () => {\r\n\t\thandleSaveChanges(categoryValue);\r\n\t};\r\n\tconst handleSaveClicked = () => {\r\n\t\thandleSave(categoryValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridRow style={{ marginTop: 20 }}>\r\n\t\t\t<GridItem sm={12} md={8} mdOffset={2} className=\"input-field\">\r\n\t\t\t\t<label className=\"active\" htmlFor=\"category\">\r\n\t\t\t\t\tName of category\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Enter name of category\"\r\n\t\t\t\t\tid=\"category\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={categoryValue ? categoryValue.name : ''}\r\n\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t/>\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem sm={12} className=\"right-align\" style={{ marginTop: 30 }}>\r\n\t\t\t\t{!category && (\r\n\t\t\t\t\t<Flat disabled={loading} onClick={handleSaveClicked}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t)}\r\n\t\t\t\t{category && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Flat disabled={loading} onClick={handleOnSaveChangesClicked}>\r\n\t\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t<Flat onClick={() => handleDelete(category.id)} disabled={loading} className=\"delete-category\">\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</GridItem>\r\n\t\t\t{category && (\r\n\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t<CategoryProductList category={category} />\r\n\t\t\t\t</GridItem>\r\n\t\t\t)}\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default AddEditCategory;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { Fab } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Card, CardBody, CardReveal, CardHeader } from 'components/card';\r\nimport AddEditCategory from './AddEditCategory';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst Categories = () => {\r\n\tconst { makeGetRequest, setData, setLoading, setError, data, loading, error } = useGet();\r\n\tconst [editableCategory, setEditableCategory] = React.useState(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/categories',\r\n\t\t\tparams: {\r\n\t\t\t\trelation: true,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tconst handleSaveChanges = category => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.put('/categories/' + category.id, { name: category.name, total: category.total })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Successfully Edited', color: 'green' });\r\n\t\t\t\tsetData(state => {\r\n\t\t\t\t\tconst newCategoryList = state.data.map(cat => {\r\n\t\t\t\t\t\tif (cat.id === category.id) {\r\n\t\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn cat;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tdata: [...newCategoryList],\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleDelete = id => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.delete('/categories/' + id)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Successfully Edited', color: 'green' });\r\n\t\t\t\tsetData(state => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdata: [...state.data.filter(category => category.id === id)],\r\n\t\t\t\t}));\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\tconst handleSave = category => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.post('/categories', category)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Successfully Saved', color: 'green' });\r\n\r\n\t\t\t\tsetData(state => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdata: [...state.data, { ...res.data, products: [] }],\r\n\t\t\t\t}));\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red' });\r\n\t}\r\n\t// if (data) {\r\n\t// \tconsole.log('categories ', data);\r\n\t// }\r\n\tconst categoryList =\r\n\t\tdata && data.data.length > 0\r\n\t\t\t? data.data.map(category => (\r\n\t\t\t\t\t<CollectionItem\r\n\t\t\t\t\t\tonClick={() => setEditableCategory(category)}\r\n\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\tclassName=\"category-item activator\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t</CollectionItem>\r\n\t\t\t  ))\r\n\t\t\t: 'No product category added yet';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} md={10} mdOffset={1}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardBody className=\"categories\">\r\n\t\t\t\t\t\t\t\t<Fab className=\"btn-large activator halfway-fab  indigo\">\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon children={'add'} />\r\n\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t\t<Collection className=\"with-header\">\r\n\t\t\t\t\t\t\t\t\t<CollectionHeader>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"indigo-text center-align\">Product Categories</h5>\r\n\t\t\t\t\t\t\t\t\t</CollectionHeader>\r\n\t\t\t\t\t\t\t\t\t{categoryList}\r\n\t\t\t\t\t\t\t\t</Collection>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardReveal>\r\n\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\tclassName=\"indigo-text center-align\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setEditableCategory(null)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{editableCategory ? 'Edit Category' : 'Add New Category'}\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon children={'close'} className=\"right\" />\r\n\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t<AddEditCategory\r\n\t\t\t\t\t\t\t\t\tcategory={editableCategory}\r\n\t\t\t\t\t\t\t\t\thandleSaveChanges={handleSaveChanges}\r\n\t\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\t\t\t\t\t\thandleSave={handleSave}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</CardReveal>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { Card, CardHeader, CardBody } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst EditAccountForm = ({ user, updateUser }) => {\r\n\tdelete user.updatedAt;\r\n\tdelete user.createdAt;\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Email Required';\r\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\terrors.email = 'Invalid email address';\r\n\t\t} else if (!values.username) {\r\n\t\t\terrors.username = 'Username Required';\r\n\t\t} else if (user.role === 'Employee') {\r\n\t\t\tif (!values.address) {\r\n\t\t\t\terrors.address = 'Address Required';\r\n\t\t\t} else if (!values.city) {\r\n\t\t\t\terrors.city = 'City Required';\r\n\t\t\t} else if (!values.state) {\r\n\t\t\t\terrors.state = 'State Required';\r\n\t\t\t} else if (!values.zip) {\r\n\t\t\t\terrors.zip = 'Zip Required';\r\n\t\t\t} else if (isNaN(values.zip.split('-').join(''))) {\r\n\t\t\t\terrors.zip = 'Zip code must be a number';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tclient(authToken())\r\n\t\t\t.put(`/users/${values.id}`, { ...values })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tupdateUser(values);\r\n\t\t\t\tAlert({ message: 'Profile Successfully Edited', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('e ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card style={{ padding: 40, paddingTop: 0 }}>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<CardHeader className=\"center-align\" style={{ paddingBottom: 20 }} children=\"Edit Profile Details\" />\r\n\r\n\t\t\t\t<Formik initialValues={{ ...user }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"username\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"address\"\r\n\t\t\t\t\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Address\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"address\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"City\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"city\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"State\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"state\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"zip\"\r\n\t\t\t\t\t\t\t\t\tname=\"zip\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Zip\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"zip\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<Flat className=\"right \" onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default EditAccountForm;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress } from 'components';\r\nimport { Card, CardHeader, CardBody } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\n// import client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst EditPassword = ({ handleAdd }) => {\r\n\tconst [pass, setPass] = React.useState('');\r\n\r\n\tconst validateForm = values => {\r\n\t\tsetPass(values.password);\r\n\t\tconst errors = {};\r\n\t\tif (!values.password) {\r\n\t\t\terrors.password = 'Password Required';\r\n\t\t} else if (values.password.length < 6) {\r\n\t\t\terrors.password = 'Password length must be greater than 5';\r\n\t\t} else if (!(values.confirm === pass)) {\r\n\t\t\terrors.confirm = 'Confirm password must match password field';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetSubmitting(false);\r\n\t\t\t// history.push('/admin/dashboard');\r\n\t\t}, 4000);\r\n\t};\r\n\treturn (\r\n\t\t<Card style={{ paddingBottom: 40 }}>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<CardHeader style={{ paddingBottom: 20 }} children=\"Reset Password\" />\r\n\r\n\t\t\t\t<Formik initialValues={{ password: '', confirm: '' }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"password\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tname=\"confirm\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"confirm\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"confirm\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<Flat className=\"right\" onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default EditPassword;\r\n","import React from 'react';\r\n\r\nimport EditAccountForm from './EditAccountForm';\r\nimport EditPassword from './EditPassword';\r\n\r\nimport { GridRow, GridItem } from 'components/grid';\r\n\r\nimport { authUser } from 'service/auth/auth';\r\nimport { Container } from 'components';\r\n\r\nconst Settings = () => {\r\n\tconst user = authUser();\r\n\r\n\tfor (let key in user) {\r\n\t\tif (user[key] === null) {\r\n\t\t\tuser[key] = '';\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"center-align indigo-text\" style={{ marginBottom: 30 }}>\r\n\t\t\t\tAccount Settings\r\n\t\t\t</h3>\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t\t<EditAccountForm user={user} />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t\t<EditPassword />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nimport { Container } from 'components';\r\nimport { GridRow, GridItem } from 'components/grid';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"page-footer indigo darken-4 white-text\">\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={4} smOffset={2} md={3} mdOffset={3}>\r\n\t\t\t\t\t\t<h5>About</h5>\r\n\t\t\t\t\t\t<ul className=\"white-text\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tBlog\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={4} smOffset={2} md={3} mdOffset={3}>\r\n\t\t\t\t\t\t<h5>Contact</h5>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tTwitter\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tFacebook\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tGithub\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<div className=\"footer-copyright center-align\">\r\n\t\t\t\t\t\t\t<Container>© {new Date().getFullYear()} wedoyourfarm.com</Container>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n\treturn (\r\n\t\t<div className=\"progress indigo\" {...props}>\r\n\t\t\t<div className=\"indeterminate indigo lighten-4\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { Dashboard, EmployeeView, CustomerView, UserProfileView, ProductView, CategoryView, SettingView } from 'views';\r\n\r\nexport default [\r\n\t{\r\n\t\turl: '/admin/dashboard',\r\n\t\tname: 'Dashboard',\r\n\t\ticon: <i className=\"material-icons\">dashboard</i>,\r\n\t\tcomponent: <Dashboard />,\r\n\t},\r\n\t{\r\n\t\turl: '/admin/profile',\r\n\t\tname: 'User Profile',\r\n\t\ticon: <i className=\"material-icons\">person</i>,\r\n\t\tcomponent: <UserProfileView />,\r\n\t},\r\n\t{\r\n\t\turl: '/admin/employees',\r\n\t\tname: 'Employees',\r\n\t\ticon: <i className=\"material-icons\">people</i>,\r\n\t\tcomponent: <EmployeeView />,\r\n\t},\r\n\t{\r\n\t\turl: '/admin/customers',\r\n\t\tname: 'Customers',\r\n\t\ticon: <i className=\"material-icons\">people</i>,\r\n\t\tcomponent: <CustomerView />,\r\n\t},\r\n\t{\r\n\t\turl: '/admin/products',\r\n\t\tname: 'Products',\r\n\t\ticon: <i className=\"material-icons\">shopping_basket</i>,\r\n\t\tcomponent: <ProductView />,\r\n\t},\r\n\t{\r\n\t\turl: '/admin/categories',\r\n\t\tname: 'Categories',\r\n\t\ticon: <i className=\"material-icons\">category</i>,\r\n\t\tcomponent: <CategoryView />,\r\n\t},\r\n\t{\r\n\t\turl: '/admin/settings',\r\n\t\tname: 'Settings',\r\n\t\ticon: <i className=\"material-icons\">settings</i>,\r\n\t\tcomponent: <SettingView />,\r\n\t},\r\n];\r\n","export default ({ message, color, outDuration }) => {\r\n\t// eslint-disable-next-line\r\n\tM.toast({ html: message, classes: color, outDuration: outDuration ? outDuration : 375 });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card } from 'components/card';\r\n\r\nconst Modal = ({ children, id, title }) => {\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div id={id} className=\"modal\">\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<h5 className=\"center-align indigo-text\">{title}</h5>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tid: PropTypes.string,\r\n\ttitle: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children, ...rest }) => {\r\n\treturn <div className=\"container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\nexport default Container;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'S/N',\r\n\t\tselector: 'id',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Quantity',\r\n\t\tselector: 'qty',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Status',\r\n\t\tselector: 'status',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Amount($)',\r\n\t\tselector: 'amount',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Card, CardHeader, CardReveal, CardBody } from 'components/card';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Collection, CollectionItem } from 'components/collections';\r\n\r\nimport { dateFormatter } from 'utils';\r\nimport columns from './columns';\r\n\r\nconst OrderTable = ({ orders, title }) => {\r\n\tconst [clickedRow, setClickedRow] = React.useState(null);\r\n\tconst activator = React.useRef(null);\r\n\r\n\tconst handleRowClicked = row => {\r\n\t\tsetClickedRow(row);\r\n\t\tactivator.current.click();\r\n\t};\r\n\tconst getProducts = items => {\r\n\t\tconst products = JSON.parse(items);\r\n\t\treturn products.map(product => (\r\n\t\t\t<div key={product.id + product.name}>\r\n\t\t\t\tName: {product.name}, Qty: {product.qty}\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\tconst getOrderList = orders => {\r\n\t\treturn orders.map((item, i) => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t\tid: i + 1,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst orderList = orders.length > 0 ? getOrderList(orders) : orders;\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<button ref={activator} className=\"activator\" style={{ display: 'none' }}></button>\r\n\t\t\t\t<DataTable\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdata={orderList}\r\n\t\t\t\t\thighlightOnHover\r\n\t\t\t\t\tpointerOnHover\r\n\t\t\t\t\tonRowClicked={handleRowClicked}\r\n\t\t\t\t/>\r\n\t\t\t</CardBody>\r\n\t\t\t<CardReveal>\r\n\t\t\t\t<CardHeader className=\"indigo-text center-align\">\r\n\t\t\t\t\tOrder Details\r\n\t\t\t\t\t<MaterialIcon children={'close'} className=\"right\" />\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t{clickedRow && (\r\n\t\t\t\t\t<Collection>\r\n\t\t\t\t\t\t<CollectionItem>\r\n\t\t\t\t\t\t\t<GridRow>\r\n\t\t\t\t\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t\t\t\t\t<div>Product(s) Ordered:</div>\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\r\n\t\t\t\t\t\t\t\t<GridItem sm={12} md={8}>\r\n\t\t\t\t\t\t\t\t\t{getProducts(clickedRow.items)}\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t</GridRow>\r\n\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Total Quantity: {clickedRow.qty}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Total Amount: {clickedRow.amount}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Status: {clickedRow.status}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Date Ordered: {clickedRow.createdAt}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Currency: {clickedRow.currency}</CollectionItem>\r\n\t\t\t\t\t</Collection>\r\n\t\t\t\t)}\r\n\t\t\t</CardReveal>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default OrderTable;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { dateFormatter } from 'utils';\r\nimport OrderTable from './customer/OrderTable';\r\n\r\nimport { Card, CardBody } from 'components/card';\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { Fab, Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nimport { signOut } from 'service/auth/auth';\r\n\r\nconst styles = {\r\n\tuserField: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n};\r\n\r\nexport default ({ user, isCustomer, openModal }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst userDetail = user => {\r\n\t\tconst localUser = {\r\n\t\t\tUsername: user.username,\r\n\t\t\tEmail: user.email,\r\n\t\t\tPhone: user.phone,\r\n\t\t\tCity: user.city,\r\n\t\t\tState: user.state,\r\n\t\t\tZip: user.zip,\r\n\t\t};\r\n\t\treturn Object.keys(localUser).map((key, i) => (\r\n\t\t\t<CollectionItem key={i}>\r\n\t\t\t\t<span style={styles.userField}>{key}: </span>\r\n\t\t\t\t{localUser[key]}\r\n\t\t\t</CollectionItem>\r\n\t\t));\r\n\t};\r\n\tconst signOutCustomer = () => {\r\n\t\tsignOut();\r\n\t\thistory.replace('/login');\r\n\t};\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t{user && (\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Collection className=\"with-header\">\r\n\t\t\t\t\t\t<CollectionHeader className=\"indigo-text\">\r\n\t\t\t\t\t\t\t<span className=\"user-profile-detail-title\">\r\n\t\t\t\t\t\t\t\t{!isCustomer && user.role === 'Customer' ? 'Customer Profile' : 'User Profile Details'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</CollectionHeader>\r\n\t\t\t\t\t\t{userDetail(user)}\r\n\t\t\t\t\t\t{user.role === 'Customer' && (\r\n\t\t\t\t\t\t\t<CollectionItem>\r\n\t\t\t\t\t\t\t\t<span style={styles.userField}>Date Joined:</span> {dateFormatter(user.createdAt)}\r\n\t\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{isCustomer && (\r\n\t\t\t\t\t\t\t<CollectionItem className=\"right\">\r\n\t\t\t\t\t\t\t\t<Flat onClick={signOutCustomer}>SignOut</Flat>\r\n\t\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Collection>\r\n\t\t\t\t\t{isCustomer && (\r\n\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\tstyle={{ marginTop: 20 }}\r\n\t\t\t\t\t\t\tonClick={() => openModal()}\r\n\t\t\t\t\t\t\tclassName=\"halfway-fab  right indigo\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MaterialIcon children={'edit'} />\r\n\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!isCustomer && user.role !== 'Customer' && (\r\n\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\tstyle={{ marginTop: 20 }}\r\n\t\t\t\t\t\t\tonClick={() => history.push('/admin/settings')}\r\n\t\t\t\t\t\t\tclassName=\"right halfway-fab  indigo\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MaterialIcon children={'edit'} />\r\n\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CardBody>\r\n\t\t\t)}\r\n\t\t\t<div id=\"order-table\">\r\n\t\t\t\t{user && user.role === 'Customer' && (\r\n\t\t\t\t\t<OrderTable\r\n\t\t\t\t\t\ttitle={isCustomer ? <span>Your Orders</span> : <span>Customer Orders</span>}\r\n\t\t\t\t\t\torders={user && user.orders ? user.orders : []}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { LinearProgress, Container } from 'components';\r\nimport { InputField } from 'components/material-fields';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { SignInUp } from 'components/buttons';\r\nimport { isAdminRoute } from 'service/auth/auth';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '15px',\r\n\t\tborderRadius: '5px',\r\n\t\tboxSizing: 'border-box',\r\n\t\tcolor: '#fff',\r\n\t\tfontSize: '18px',\r\n\t},\r\n};\r\n\r\nconst LoginForm = ({ handleSubmit }) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.username) {\r\n\t\t\terrors.username = 'Username is required';\r\n\t\t} else if (!values.password) {\r\n\t\t\terrors.password = 'Password is required';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleRegisterClick = () => {\r\n\t\thistory.push('/register');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridRow className=\"grey lighten-5 login\" style={style.login}>\r\n\t\t\t<h2 className=\"header center-align white-text\" style={style.header}>\r\n\t\t\t\tSign In\r\n\t\t\t</h2>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\tinitialValues={{ username: '', password: '' }}\r\n\t\t\t\t\t\t\tvalidate={validateForm}\r\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\tstyleLabel=\"login-label\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...style.input, marginBottom: 20 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange', marginBottom: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyleLabel=\"login-label\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...style.input }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange', marginBottom: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\" right-align\">\r\n\t\t\t\t\t\t\t\t\t\t\t{!isAdminRoute(location) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SignInUp\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"login-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleRegisterClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t\t\t\t</SignInUp>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<SignInUp\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"login-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={submitForm}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t\t\t</SignInUp>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { ErrorMessage } from 'formik';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nconst style = {\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst UserForm = ({ inputStyle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"email\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\tautoFocus\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t/>\r\n\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tlabel=\"Username\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"username\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"phone\"\r\n\t\t\t\tname=\"phone\"\r\n\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"phone\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"city\"\r\n\t\t\t\tname=\"city\"\r\n\t\t\t\tlabel=\"City\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"city\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"state\"\r\n\t\t\t\tname=\"state\"\r\n\t\t\t\tlabel=\"State\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"state\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"zip\"\r\n\t\t\t\tname=\"zip\"\r\n\t\t\t\tlabel=\"Zip\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"zip\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UserForm;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Alert } from 'components';\r\n\r\nimport { LoginForm } from 'components';\r\nimport { saveUser } from 'service/auth/auth';\r\n\r\nimport client from 'service/client';\r\n\r\nconst Login = () => {\r\n\tconst history = useHistory();\r\n\tReact.useEffect(() => {\r\n\t\tdocument.body.classList.remove('has-fixed-sidenav');\r\n\t}, []);\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tclient()\r\n\t\t\t.post('/auth/login', { username: values.username.trim(), password: values.password.trim() })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tif (res.data.user.role !== 'Customer') {\r\n\t\t\t\t\treturn history.replace('/login');\r\n\t\t\t\t}\r\n\t\t\t\tsaveUser(res.data);\r\n\t\t\t\thistory.push('/dashboard');\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t};\r\n\treturn <LoginForm handleSubmit={handleSubmit} />;\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { LinearProgress, Alert, Profile, Container } from 'components';\r\nimport { GridItem, GridRow } from 'components/grid';\r\n\r\nimport { authToken, isAdmin, isCustomer, authUser } from 'service/auth/auth';\r\nimport { UserProfileView } from 'views';\r\n\r\nconst Dashboard = () => {\r\n\treturn (\r\n\t\t<GridRow>\r\n\t\t\t<GridItem sm={12} md={10} mdOffset={1}>\r\n\t\t\t\t<UserProfileView />\r\n\t\t\t</GridItem>\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { Card, CardBody, CardHeader } from 'components/card';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { SignInUp } from 'components/buttons';\r\nimport { UserForm } from 'components';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport client from 'service/client';\r\nimport { validateUserForm } from 'utils';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\taction: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '15px',\r\n\t\tborderRadius: '5px',\r\n\t\tboxSizing: 'border-box',\r\n\t\tmarginBottom: 25,\r\n\t\tcolor: '#fff',\r\n\t\tfontSize: '18px',\r\n\t},\r\n};\r\n\r\nconst initialValues = {\r\n\temail: '',\r\n\tusername: '',\r\n\tpassword: '',\r\n\taddress: '',\r\n\tcity: '',\r\n\tstate: '',\r\n\tzip: '',\r\n};\r\n\r\nconst Register = () => {\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tdocument.body.classList.remove('has-fixed-sidenav');\r\n\t}, []);\r\n\tconst validateForm = values => {\r\n\t\tconst errors = validateUserForm(values);\r\n\t\tif (!values.password) {\r\n\t\t\terrors.password = 'Password is required';\r\n\t\t} else if (values.password.length < 6) {\r\n\t\t\terrors.password = 'Password length must be at least 6 characters';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\t// console.log('values ', values);\r\n\r\n\t\tclient()\r\n\t\t\t.post('/users', { ...values, role: 'Customer' })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t// console.log('resgistered user ', res);\r\n\t\t\t\tAlert({ message: 'Successfully registered, click login button bellow to sign in', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('e ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridRow className=\"login\" style={style.login}>\r\n\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t<Card className=\"transparent\">\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardHeader className=\"white-text center-align\">Sign Up</CardHeader>\r\n\t\t\t\t\t\t<Formik initialValues={initialValues} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Form id=\"register-form\">\r\n\t\t\t\t\t\t\t\t\t\t<UserForm inputStyle={style.input} />\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange', marginBottom: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"register-action-buttons-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t<SignInUp\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"login-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={submitForm}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t\t\t</SignInUp>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: 10,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAlready have an account?\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SignInUp className=\"login-btn\" onClick={() => history.push('/login')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t\t\t\t</SignInUp>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && <LinearProgress style={{ marginBottom: 30 }} />}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import httpClient from 'service/client';\r\nimport React from 'react';\r\n\r\nimport { authUser } from 'service/auth/auth';\r\nimport { saveOrderId } from 'utils';\r\nconst requestForIntent = intentOptions => {\r\n\tconst { authToken, data } = intentOptions;\r\n\treturn httpClient(authToken).post('/create-payment-intent', data);\r\n};\r\n\r\nconst confirmPayment = confirmOptions => {\r\n\tconst customer = authUser();\r\n\tconst { client_secret, stripe, card } = confirmOptions;\r\n\treturn stripe.confirmCardPayment(client_secret, {\r\n\t\tpayment_method: {\r\n\t\t\tcard,\r\n\t\t\tbilling_details: {\r\n\t\t\t\tname: customer.username,\r\n\t\t\t\temail: customer.email,\r\n\t\t\t\tphone: customer.phone,\r\n\t\t\t\taddress: {\r\n\t\t\t\t\tcity: customer.city,\r\n\t\t\t\t\tstate: customer.state,\r\n\t\t\t\t\tpostal_code: customer.zip,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n};\r\nexport const useCheckout = () => {\r\n\tconst [response, setResponse] = React.useState();\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\tconst [error, setError] = React.useState();\r\n\r\n\tconst checkout = options => {\r\n\t\tconst { authToken, data, stripe, card } = options;\r\n\t\tsetLoading(true);\r\n\t\trequestForIntent({ authToken, data })\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('Response from my server ', res);\r\n\t\t\t\tsaveOrderId(res.data.orderId);\r\n\t\t\t\tconst {\r\n\t\t\t\t\tdata: { client_secret },\r\n\t\t\t\t} = res;\r\n\t\t\t\treturn confirmPayment({ client_secret, stripe, card });\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tif (result && result.error) {\r\n\t\t\t\t\treturn setError(result);\r\n\t\t\t\t}\r\n\t\t\t\tsetResponse(result);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn { checkout, response, error, loading };\r\n};\r\n","export default id => {\r\n\tlocalStorage.setItem('order_id', JSON.stringify(id));\r\n};\r\n","import React from 'react';\r\nimport { CardElement } from '@stripe/react-stripe-js';\r\n\r\nimport './CardSection.css';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\tcolor: '#32325d',\r\n\t\t\tfontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n\t\t\tfontSmoothing: 'antialiased',\r\n\t\t\tfontSize: '16px',\r\n\t\t\t'::placeholder': {\r\n\t\t\t\tcolor: '#aab7c4',\r\n\t\t\t},\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\tcolor: '#fa755a',\r\n\t\t\ticonColor: '#fa755a',\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst CardSection = () => {\r\n\treturn <CardElement options={CARD_ELEMENT_OPTIONS} />;\r\n};\r\n\r\nexport default CardSection;\r\n","import React from 'react';\r\n\r\nimport { Card, CardHeader, CardBody, CardAction } from 'components/card';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport { useElements, useStripe, CardElement } from '@stripe/react-stripe-js';\r\n\r\nimport { useCheckout } from 'service/checkout/checkout';\r\n\r\nimport { Alert, LinearProgress } from 'components';\r\nimport { authToken, authUser } from 'service/auth/auth';\r\n\r\nimport CardSection from './CardSection';\r\nimport { cartExists, getCustomerCart, getOrderId, removeCustomerCart } from 'utils';\r\nimport client from 'service/client';\r\n\r\nclass Intent {\r\n\tconstructor(amount, currency) {\r\n\t\tthis.amount = amount;\r\n\t\tthis.currency = currency || 'usd';\r\n\t}\r\n}\r\n\r\nconst CheckoutForm = () => {\r\n\tconst stripe = useStripe();\r\n\tconst elements = useElements();\r\n\r\n\tconst { checkout, loading, response, error } = useCheckout();\r\n\r\n\tif (response) {\r\n\t\tAlert({ message: 'Transaction successful', color: 'green' });\r\n\t\tconsole.log('response ', response);\r\n\t\tremoveCustomerCart();\r\n\t\tclient(authToken())\r\n\t\t\t.put('/orders/' + getOrderId(), {\r\n\t\t\t\tstatus: 'completed',\r\n\t\t\t})\r\n\t\t\t.then(res => console.log('order edited', res))\r\n\t\t\t.catch(e => console.log('error updating order', e));\r\n\t}\r\n\tif (error) {\r\n\t\t// Alert({ message: error.message, color: 'red' });\r\n\t\tconsole.log(error);\r\n\t}\r\n\tconst createOrder = (cart, currency) => {\r\n\t\tconst customer = authUser();\r\n\t\tlet qty = 0;\r\n\t\tlet amount = 0;\r\n\t\tconst items = [];\r\n\t\tfor (let key in cart) {\r\n\t\t\tqty = qty + cart[key].qty;\r\n\t\t\tamount = amount + cart[key].amount;\r\n\t\t\titems.push({ name: key, qty: cart[key].qty });\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tuser: customer.id,\r\n\t\t\tqty,\r\n\t\t\tamount,\r\n\t\t\tstatus: 'pending',\r\n\t\t\titems: JSON.stringify(items),\r\n\t\t\tcurrency: currency || 'usd',\r\n\t\t};\r\n\t};\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!cartExists()) return;\r\n\t\tconst cart = getCustomerCart();\r\n\t\tconst order = createOrder(cart);\r\n\t\tconsole.log('order', order);\r\n\t\tconsole.log('cart', cart);\r\n\r\n\t\tif (!stripe || !elements) {\r\n\t\t\t// Stripe.js has not yet loaded.\r\n\t\t\t// Make sure to disable form submission until Stripe.js has loaded.\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst options = {\r\n\t\t\tauthToken: authToken(),\r\n\t\t\tcard: elements.getElement(CardElement),\r\n\t\t\tdata: order,\r\n\t\t\tstripe: stripe,\r\n\t\t};\r\n\t\tcheckout(options);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{error && Alert({ message: error.message, color: 'red' })}\r\n\t\t\t<GridRow style={{ marginTop: 40 }}>\r\n\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<CardHeader className=\"center-align indigo-text\">Enter Your Card Details</CardHeader>\r\n\t\t\t\t\t\t\t<CardSection />\r\n\t\t\t\t\t\t\t<CardAction>\r\n\t\t\t\t\t\t\t\t<Flat onClick={handleSubmit} disabled={!stripe || loading} className=\"right\">\r\n\t\t\t\t\t\t\t\t\tConfrim Orders\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</CardAction>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default CheckoutForm;\r\n","export default () => {\r\n\tlocalStorage.removeItem('loggedIn_user_cart');\r\n};\r\n","export default () => {\r\n\treturn JSON.parse(localStorage.getItem('order_id'));\r\n};\r\n","export default () => {\r\n\treturn !!localStorage.getItem('loggedIn_user_cart');\r\n};\r\n","export default () => {\r\n\treturn JSON.parse(localStorage.getItem('loggedIn_user_cart'));\r\n};\r\n","import React from 'react';\r\n\r\n// Stripe related stuff\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport CheckoutForm from './CheckoutForm';\r\n\r\nconst stripePromise = loadStripe('pk_test_1JoaQRJQ3zfT4LiF9U6mnoKP00XL12OHOY');\r\n\r\nconst Checkout = () => {\r\n\treturn (\r\n\t\t<Elements stripe={stripePromise}>\r\n\t\t\t<CheckoutForm />\r\n\t\t</Elements>\r\n\t);\r\n};\r\n\r\nexport default Checkout;\r\n","import React from 'react';\r\nimport LoginView from './Login';\r\nimport DashboardView from './Dashboard';\r\nimport RegisterView from './Register';\r\nimport CheckoutView from './CheckoutView';\r\nimport { MaterialIcon } from 'components/icons';\r\nexport default [\r\n\t{\r\n\t\turl: '/dashboard',\r\n\t\tname: 'Dashboard',\r\n\t\ticon: <MaterialIcon children={'dashboard'} />,\r\n\t\tcomponent: <DashboardView />,\r\n\t},\r\n\t// {\r\n\t// \turl: '/dashboard/register',\r\n\t// \tname: 'Register',\r\n\t// \ticon: <MaterialIcon children=\"person_add\" />,\r\n\t// \tcomponent: <RegisterView />,\r\n\t// },\r\n\t// {\r\n\t// \turl: '/dashboard/login',\r\n\t// \tname: 'Login',\r\n\t// \ticon: <MaterialIcon children=\"account_circle\" />,\r\n\t// \tcomponent: <LoginView />,\r\n\t// },\r\n\t{\r\n\t\turl: '/checkout',\r\n\t\tname: 'Checkout',\r\n\t\ticon: <MaterialIcon children=\"shopping_cart\" />,\r\n\t\tcomponent: <CheckoutView />,\r\n\t},\r\n];\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { Container } from 'components';\r\nimport { isLoggedIn } from 'service/auth/auth';\r\nimport { activeRoute } from 'utils';\r\n\r\nimport routes from './routes';\r\n\r\nconst Navbar = () => {\r\n\tconst handleLogoClick = () => {\r\n\t\twindow.location = '/';\r\n\t};\r\n\tconst routeList = () => {\r\n\t\tlet filteredRoutes;\r\n\t\tif (isLoggedIn()) {\r\n\t\t\tfilteredRoutes = routes\r\n\t\t\t\t.filter(route => route.url !== '/dashboard/register')\r\n\t\t\t\t.filter(route => route.url !== '/dashboard/login')\r\n\t\t\t\t.map((route, i) => (\r\n\t\t\t\t\t<li key={route.name + i} className=\"waves-effect \">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tclassName=\"white-text\"\r\n\t\t\t\t\t\t\tactiveClassName={clsx({ 'active-route': activeRoute(route.url) })}\r\n\t\t\t\t\t\t\tto={route.url}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{route.name}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t));\r\n\t\t} else {\r\n\t\t\tfilteredRoutes = routes.map((route, i) => (\r\n\t\t\t\t<li key={route.name + i} className=\"waves-effect \">\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tclassName=\"white-text\"\r\n\t\t\t\t\t\tto={route.url}\r\n\t\t\t\t\t\tactiveClassName={clsx({ 'active-route': activeRoute(route.url) })}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{route.name}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t));\r\n\t\t}\r\n\t\treturn filteredRoutes;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"navbar-fixed\">\r\n\t\t\t<nav>\r\n\t\t\t\t<div className=\"nav-wrapper indigo\">\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<span onClick={handleLogoClick} style={{ cursor: 'pointer' }} className=\"brand-logo link\">\r\n\t\t\t\t\t\t\tWDYF\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n\t\t\t\t\t\t\t{routeList()}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<button data-target=\"mobile-nav\" className=\"sidenav-trigger hide-on-large-only\">\r\n\t\t\t\t\t\t\t<MaterialIcon children={'menu'} className=\"white-text\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CollectionItem, Collection } from 'components/collections';\r\nimport { isLoggedIn } from 'service/auth/auth';\r\n\r\nimport { activeRoute } from 'utils';\r\n\r\nimport routes from './routes';\r\n\r\nconst Sidenav = ({ closeSidenav }) => {\r\n\tconst routeList = () => {\r\n\t\tlet filteredRoutes;\r\n\t\tif (isLoggedIn()) {\r\n\t\t\tfilteredRoutes = routes\r\n\t\t\t\t.filter(route => route.name !== 'Register')\r\n\t\t\t\t.filter(route => route.name !== 'Login')\r\n\t\t\t\t.map((route, i) => (\r\n\t\t\t\t\t<CollectionItem onClick={closeSidenav} key={route.name + i} className=\"waves-effect \">\r\n\t\t\t\t\t\t<NavLink activeClassName={clsx({ active: activeRoute(route.url) })} to={route.url}>\r\n\t\t\t\t\t\t\t{route.icon}\r\n\t\t\t\t\t\t\t{route.name}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t));\r\n\t\t} else {\r\n\t\t\tfilteredRoutes = routes.map((route, i) => (\r\n\t\t\t\t<CollectionItem onClick={closeSidenav} key={route.name + i} className=\"waves-effect \">\r\n\t\t\t\t\t<NavLink to={route.url} activeClassName={clsx({ active: activeRoute(route.url) })}>\r\n\t\t\t\t\t\t{route.icon}\r\n\t\t\t\t\t\t{route.name}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</CollectionItem>\r\n\t\t\t));\r\n\t\t}\r\n\t\treturn filteredRoutes;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Collection id=\"mobile-nav\" className=\"sidenav white\">\r\n\t\t\t{routeList()}\r\n\t\t</Collection>\r\n\t);\r\n};\r\n\r\nexport default Sidenav;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'materialize-css';\r\n\r\nimport Navbar from './Navbar';\r\nimport Sidebar from './Sidebar';\r\nimport Footer from 'layouts/admin/components/Footer';\r\nimport { Container } from 'components';\r\n\r\nconst Home = ({ children }) => {\r\n\tconst sideNav = React.useRef(null);\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.sidenav');\r\n\t\t// eslint-disable-next-line\r\n\t\tsideNav.current = M.Sidenav.init(elems);\r\n\t});\r\n\tReact.useEffect(() => {\r\n\t\tdocument.body.classList.remove('has-fixed-sidenav');\r\n\t}, []);\r\n\tconst handleCloseSidenav = () => {\r\n\t\tsideNav.current[0].close();\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Sidebar closeSidenav={handleCloseSidenav} />\r\n\t\t\t<Container>{children}</Container>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nHome.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Redirect, useLocation, Switch } from 'react-router-dom';\r\n\r\nimport StoreLayout from './Home';\r\nimport CustomerLogin from './Login';\r\nimport CustomerRegister from './Register';\r\n\r\nimport routes from './routes';\r\nimport { isLoggedIn, isCustomer, isFromStore, isHomeRoute } from 'service/auth/auth';\r\n\r\nexport default () => {\r\n\tconst location = useLocation();\r\n\tconst routeList = routes.map((route, i) => (\r\n\t\t<Route\r\n\t\t\texact\r\n\t\t\tkey={route.name + i}\r\n\t\t\tpath={route.url}\r\n\t\t\trender={() => {\r\n\t\t\t\tif (route.url === '/dashboard' && isLoggedIn() && isCustomer() && isFromStore()) {\r\n\t\t\t\t\treturn <Redirect to=\"/checkout\" />;\r\n\t\t\t\t}\r\n\t\t\t\tif (route.url === '/dashboard' || route.url === '/checkout') {\r\n\t\t\t\t\tif (isLoggedIn() && isCustomer()) {\r\n\t\t\t\t\t\treturn <StoreLayout>{route.component}</StoreLayout>;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <Redirect to=\"/login\" />;\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath=\"/login\"\r\n\t\t\t\trender={() => {\r\n\t\t\t\t\tif (isLoggedIn() && isCustomer()) return <Redirect to=\"/dashboard\" />;\r\n\t\t\t\t\treturn <CustomerLogin />;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Route exact path=\"/\" render={()=><Redirect to=\"/login\"/>} />\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath=\"/register\"\r\n\t\t\t\trender={() => {\r\n\t\t\t\t\tif (isLoggedIn() && isCustomer()) return <Redirect to=\"/dashboard\" />;\r\n\t\t\t\t\treturn <CustomerRegister />;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t{routeList}\r\n\t\t\t{!isHomeRoute(location) && <Redirect to=\"/login\" />}\r\n\t\t</Switch>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport './assets/app.scss';\r\n\r\nimport './App.css';\r\n// import { RoutesWithLayout } from 'components';\r\nimport StoreRouting from 'views/store/StoreRouting';\r\n\r\n// import allRoutes from 'routes';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<StoreRouting />\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}