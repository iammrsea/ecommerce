{"version":3,"sources":["components/card/Card.js","components/card/CardHeader.js","components/card/CardBody.js","components/card/CardAction.js","components/card/CardImage.js","components/card/CardReveal.js","components/grid/GridRow.js","components/grid/GridItem.js","views/dashboard/components/custom-card/CustomCard.js","components/icons/Material.js","views/dashboard/components/custom-icon/CustomIcon.js","views/dashboard/components/total-customers/TotalCustomers.js","views/dashboard/components/total-products/TotalProducts.js","views/dashboard/components/total-orders/TotalOrders.js","views/dashboard/components/latest-sales/chart.js","components/buttons/Fab.js","components/buttons/Normal.js","components/buttons/Flat.js","components/buttons/SignInUp.js","utils/date-formatter.js","utils/deDuplicate.js","views/dashboard/components/latest-sales/LatestSales.js","utils/dataset.js","service/client.js","service/auth/auth.js","views/dashboard/components/orders/columns.js","views/dashboard/components/orders/OrderTable.js","service/hooks/useGet.js","views/dashboard/Dashboard.js","views/admin-login/AdminLogin.js","views/employees/DeleteEmployee.js","views/employees/columns.js","views/employees/Table.js","components/material-fields/InputField.js","views/employees/AddForm.js","views/employees/Employees.js","views/customers/columns.js","views/customers/EmailForm.js","views/customers/EmailModal.js","views/customers/Table.js","views/customers/Customers.js","views/user-profile/EditForm.js","utils/validate-user-form.js","views/user-profile/UserProfile.js","views/products/columns.js","views/products/AddForm.js","views/products/ProductModal.js","views/products/Table.js","views/products/Products.js","components/collections/Collection.js","components/collections/CollectionItem.js","components/collections/CollectionHeader.js","views/products/EditForm.js","views/products/Product.js","views/products/ProductDetail.js","views/categories/CategoryProductList.js","views/categories/AddEditCategory.js","views/categories/Categories.js","views/settings/EditAccountForm.js","views/settings/EditPassword.js","views/settings/Settings.js","views/customers/profile/CustomerProfile.js","service/rebuild.js","service/gitClient.js","views/rebuild/Rebuild.js","layouts/admin/components/Navbar.js","layouts/admin/components/Brand.js","layouts/admin/components/Sidebar.js","layouts/admin/components/Footer.js","routes/index.js","layouts/admin/Admin.js","components/routes-with-layout/RoutesWithLayout.js","components/linear-progress/LinearProgress.js","components/alert/Alert.js","components/modal/Modal.js","components/container/Container.js","components/user/customer/columns.js","components/user/customer/OrderTable.js","components/user/Profile.js","components/forms/LoginForm.js","components/forms/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","children","className","rest","clsx","CardHeader","CardBody","CardAction","CardImage","src","text","alt","CardReveal","GridRow","classes","sm","md","lg","smOffset","mdOffset","lgOffset","s","m","l","sOffset","mOffset","lOffset","GridItem","CustomCard","title","count","style","display","fontWeight","Material","styles","icon","width","height","textAlign","justifyContent","alignItems","color","CustomIcon","TotalCustomers","customerCount","TotalProducts","productCount","TotalOrders","orderCount","palette","primary","secondary","options","responsive","animation","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","borderColor","backgroundColor","titleFontColor","bodyFontColor","footerFontColor","layout","padding","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","Fab","Normal","textTransform","Flat","SignInUp","date","format","moment","list","reduce","previous","current","accumulator","indexOf","push","header","LatestSales","sales","loadMore","loading","React","useState","pagedData","setPagedData","currentPage","setCurrentPage","totalPages","Math","ceil","data","length","useEffect","values","start","end","slice","next","labels","map","value","dateFormatter","createdAt","datasets","label","qty","profit","dataset","disabled","onClick","state","meta","hasNext","nextCursor","authToken","axios","create","baseURL","headers","authorization","getUserData","user","role","access_token","JSON","parse","localStorage","getItem","e","Alert","message","console","log","isLoggedIn","isAdmin","isCustomer","authUser","signOut","removeItem","columns","name","selector","sortable","orders","setOrders","setLoading","client","get","params","relation","then","res","transformedOrders","order","i","customer","username","id","catch","LinearProgress","highlightOnHover","useGet","error","setError","setData","makeGetRequest","url","Dashboard","retrievedSales","useRef","deDuplicate","outDuration","cursor","AdminLogin","history","useHistory","document","body","classList","remove","add","handleSubmit","setSubmitting","post","trim","password","replace","setItem","stringify","saveUser","response","adminRoute","Delete","deleting","data-position","data-tooltip","right","actions","openModal","Table","handleDelete","employees","item","edit","key","getEmployeeList","onSelectedRowsChange","pagination","noContextMenu","onRowClicked","row","InputField","labelClassName","styleLabel","htmlFor","defaultProps","login","marginBottom","marginTop","input","AddForm","handleAdd","closeModal","pass","setPass","initialValues","email","confirm","validate","errors","test","onSubmit","employee","newEmployee","isSubmitting","submitForm","autoComplete","autoFocus","component","type","EmployeesList","setDeleting","modal","elems","querySelectorAll","instances","M","Modal","init","tooltip","Tooltip","close","open","delete","filter","recipients","resize","EmailForm","selectedRows","setRecipients","subject","setSubject","setMessage","onChange","target","undefined","recipientEmails","Array","isArray","split","EmailModal","Actions","handleLoadMore","loadingMore","contextAction","setSelectedRows","customers","getCustomerList","hasMore","contextActions","selectableRows","pointerOnHover","selectableRowsHighlight","CustomerList","allCus","EditForm","updateUser","updatedAt","phone","city","zip","isNaN","join","validateUserForm","put","UserProfile","editedUser","Profile","description","price","available","total","category","updateProductList","file","setFile","categories","setCategories","handleInput","files","formData","FormData","append","cat","as","onInput","ProductModal","getProductList","ProductList","allProducts","product","Collection","CollectionItem","CollectionHeader","SaveChanges","setEdit","Submit","Cancel","updateProduct","initValues","createFormDataRequest","config","imageUrl","saveChanges","addProduct","fabContainer","Product","marginRight","localProduct","Description","Price","Quantity","Category","Object","keys","productDetail","ProductDetail","useParams","CategoryProductList","productList","products","listItem","AddEditCategory","handleSaveChanges","handleSave","categoryValue","setCategoryValue","placeholder","event","Categories","editableCategory","setEditableCategory","categoryList","newCategoryList","EditAccountForm","paddingTop","paddingBottom","address","EditPassword","setTimeout","Settings","CustomerProfile","owner","repo","path","accessToken","rebuild_token","Octokit","auth","saveContents","repos","createOrUpdateFile","useRebuild","rebuild","a","getContents","sha","content","decodedContent","Base64","decode","newContent","request","Date","toISOString","encode","Rebuild","handleGenerateClick","Navbar","window","location","to","data-target","brand","paddingLeft","border","Brand","borderBottom","Sidebar","pages","closeSidenav","activeRoute","routeName","urlParts","href","endsWith","items","page","activeClassName","active","borderRight","Footer","getFullYear","routes","route","Admin","sideNav","Sidenav","useLocation","allowedRoutes","exact","render","pathname","isHomeRoute","toast","html","Container","OrderTable","clickedRow","setClickedRow","activator","orderList","getOrderList","ref","click","amount","status","currency","userField","localUser","Username","Email","Phone","City","State","Zip","userDetail","borderRadius","boxSizing","fontSize","LoginForm","handleRegisterClick","UserForm","inputStyle","App","RoutesWithLayout","allRoutes","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b5759c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCard.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardHeader = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-title', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardHeader.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardHeader;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardBody = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-content', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardBody.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardBody;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardAction = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-action', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardAction.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardAction;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardImage = props => {\r\n\tconst { className, src, children, text, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-image', className])} {...rest}>\r\n\t\t\t<img src={src} alt={text} />\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardImage.propTypes = {\r\n\tsrc: PropTypes.string.isRequired,\r\n\tclassName: PropTypes.string,\r\n\ttext: PropTypes.string,\r\n\tchildren: PropTypes.node,\r\n};\r\nexport default CardImage;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardReveal = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-reveal', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardReveal.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardReveal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst GridRow = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<div className={clsx(['row', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nGridRow.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default GridRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst classes = ({ sm, md, lg, smOffset, mdOffset, lgOffset, className }) => {\r\n\tconst s = `s${sm}`;\r\n\tconst m = `m${md}`;\r\n\tconst l = `l${lg}`;\r\n\tconst sOffset = `offset-s${smOffset}`;\r\n\tconst mOffset = `offset-m${mdOffset}`;\r\n\tconst lOffset = `offset-l${lgOffset}`;\r\n\treturn clsx([\r\n\t\t'col',\r\n\t\t{ [s]: sm },\r\n\t\t{ [m]: md },\r\n\t\t{ [l]: lg },\r\n\t\t{ [sOffset]: smOffset },\r\n\t\t{ [mOffset]: mdOffset },\r\n\t\t{ [lOffset]: lgOffset },\r\n\t\tclassName,\r\n\t]);\r\n};\r\nconst GridItem = props => {\r\n\tconst { children, ...rest } = props;\r\n\treturn <div className={classes(rest)}>{children}</div>;\r\n};\r\n\r\nGridItem.propTypes = {\r\n\tsm: PropTypes.number,\r\n\tmd: PropTypes.number,\r\n\tlg: PropTypes.number,\r\n\tsmOffset: PropTypes.number,\r\n\tmdOffset: PropTypes.number,\r\n\tlgOffset: PropTypes.number,\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default GridItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card, CardBody } from 'components/card';\r\nimport { GridItem, GridRow } from 'components/grid';\r\n\r\nconst CustomCard = props => {\r\n\tconst { title, count, children, className } = props;\r\n\treturn (\r\n\t\t<Card className={className}>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={7}>\r\n\t\t\t\t\t\t<span style={{ display: 'block', fontWeight: 600 }}>{title}</span>\r\n\t\t\t\t\t\t<span style={{ fontWeight: 500 }}>{count}</span>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={5}>{children}</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<div className=\"card-metric-change increase green-text\">\r\n\t\t\t\t\t\t\t<i className=\"material-icons left\">keyboard_arrow_down</i>\r\n\t\t\t\t\t\t\t50%\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default CustomCard;\r\n\r\nCustomCard.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tcount: PropTypes.number.isRequired,\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n// <div className=\"card\">\r\n// \t<div className=\"card-stacked\">\r\n// \t\t<div className=\"card-metrics card-metrics-static\">\r\n// \t\t\t<div className=\"card-metric\">\r\n// \t\t\t\t<div className=\"card-metric-title\">{title}</div>\r\n// \t\t\t\t<div className=\"card-metric-value\">{count}</div>\r\n// \t\t\t\t<div className=\"card-metric-change increase\">\r\n// \t\t\t\t\t<i className=\"material-icons left\">keyboard_arrow_down</i>\r\n// \t\t\t\t\t50%\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t</div>\r\n// </div>;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Material = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<i className={clsx(['material-icons', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</i>\r\n\t);\r\n};\r\n\r\nMaterial.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Material;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst styles = {\r\n\ticon: {\r\n\t\twidth: '50px',\r\n\t\theight: '50px',\r\n\t\ttextAlign: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tcolor: '#fff',\r\n\t},\r\n};\r\n\r\nconst CustomIcon = ({ children, className }) => {\r\n\treturn (\r\n\t\t<MaterialIcon className={clsx(['circle', className])} style={styles.icon}>\r\n\t\t\t{children}\r\n\t\t</MaterialIcon>\r\n\t);\r\n};\r\n\r\nCustomIcon.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CustomIcon;\r\n","import React from 'react';\r\n\r\nimport CustomCard from '../custom-card/CustomCard';\r\nimport CustomIcon from '../custom-icon/CustomIcon';\r\n\r\nconst TotalCustomers = ({ customerCount }) => {\r\n\treturn (\r\n\t\t<CustomCard title=\"Total Customers\" count={customerCount}>\r\n\t\t\t<CustomIcon className=\"green\">people</CustomIcon>\r\n\t\t</CustomCard>\r\n\t);\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\n\r\nimport CustomCard from '../custom-card/CustomCard';\r\nimport CustomIcon from '../custom-icon/CustomIcon';\r\n\r\nconst TotalProducts = ({ productCount }) => {\r\n\treturn (\r\n\t\t<CustomCard title=\"Total Products\" count={productCount}>\r\n\t\t\t<CustomIcon className=\"red\">shopping_basket</CustomIcon>\r\n\t\t</CustomCard>\r\n\t);\r\n};\r\n\r\nexport default TotalProducts;\r\n","import React from 'react';\r\n\r\nimport CustomCard from '../custom-card/CustomCard';\r\nimport CustomIcon from '../custom-icon/CustomIcon';\r\n\r\nconst TotalOrders = ({ orderCount }) => {\r\n\treturn (\r\n\t\t<CustomCard title=\"Total Order\" count={orderCount}>\r\n\t\t\t<CustomIcon className=\"indigo\">insert_chart</CustomIcon>\r\n\t\t</CustomCard>\r\n\t);\r\n};\r\n\r\nexport default TotalOrders;\r\n","const palette = {\r\n\tprimary: {\r\n\t\tmain: '#3949ab',\r\n\t},\r\n\tneutral: '#e0e0e0',\r\n\tdivider: '#eeeeee',\r\n\twhite: '#ffffff',\r\n\ttext: {\r\n\t\tprimary: '#1e88e5',\r\n\t\tsecondary: '#2979ff',\r\n\t},\r\n};\r\n\r\nexport const options = {\r\n\tresponsive: true,\r\n\t// maintainAspectRatio: false,\r\n\tanimation: false,\r\n\t// legend: { display: false },\r\n\tcornerRadius: 20,\r\n\ttooltips: {\r\n\t\tenabled: true,\r\n\t\tmode: 'index',\r\n\t\tintersect: false,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: palette.divider,\r\n\t\tbackgroundColor: palette.white,\r\n\t\ttitleFontColor: palette.text.primary,\r\n\t\tbodyFontColor: palette.text.secondary,\r\n\t\tfooterFontColor: palette.text.secondary,\r\n\t},\r\n\tlayout: { padding: 0 },\r\n\tscales: {\r\n\t\txAxes: [\r\n\t\t\t{\r\n\t\t\t\tbarThickness: 12,\r\n\t\t\t\tmaxBarThickness: 10,\r\n\t\t\t\tbarPercentage: 0.5,\r\n\t\t\t\tcategoryPercentage: 0.5,\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tfontColor: palette.text.secondary,\r\n\t\t\t\t},\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\tdrawBorder: false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tyAxes: [\r\n\t\t\t{\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tfontColor: palette.text.secondary,\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t},\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tborderDash: [2],\r\n\t\t\t\t\tborderDashOffset: [2],\r\n\t\t\t\t\tcolor: palette.divider,\r\n\t\t\t\t\tdrawBorder: false,\r\n\t\t\t\t\tzeroLineBorderDash: [2],\r\n\t\t\t\t\tzeroLineBorderDashOffset: [2],\r\n\t\t\t\t\tzeroLineColor: palette.divider,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Fab = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button className={clsx(['btn-floating waves-effect waves-light', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nFab.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Fab;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Normal = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light', className])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nNormal.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Normal;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Flat = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light btn-flat product-btn', className])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nFlat.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Flat;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SignInUp = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light btn-flat ', { 'product-btn': !className }, className])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nSignInUp.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default SignInUp;\r\n","import moment from 'moment';\r\n\r\nexport default (date, format) => {\r\n\treturn moment(date).format(format ? format : 'DD-MM-YYYY');\r\n};\r\n","export default list => {\r\n\treturn list.reduce((previous, current) => {\r\n\t\tlet accumulator = previous;\r\n\t\tif (previous.indexOf(current) > -1) {\r\n\t\t\treturn previous;\r\n\t\t}\r\n\t\taccumulator.push(current);\r\n\t\treturn accumulator;\r\n\t}, []);\r\n};\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport { options } from './chart';\r\nimport { Card, CardBody, CardHeader } from 'components/card';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { Flat } from 'components/buttons';\r\nimport { dataset } from 'utils';\r\n\r\nconst style = {\r\n\theader: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t},\r\n};\r\n\r\nconst LatestSales = ({ sales, loadMore, loading }) => {\r\n\tconst [pagedData, setPagedData] = React.useState();\r\n\tconst [currentPage, setCurrentPage] = React.useState(0);\r\n\r\n\tconst perPage = 7;\r\n\tconst totalPages = Math.ceil(sales.data.length / perPage);\r\n\r\n\tconst next = () => {\r\n\t\tlet start = perPage * currentPage;\r\n\t\tlet end = start + perPage;\r\n\t\treturn sales.data.slice(start, end);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlet values = next();\r\n\t\tsetPagedData(dataset(values));\r\n\t}, [currentPage]);\r\n\r\n\tconst handleNext = () => {\r\n\t\tsetCurrentPage(state => state + 1);\r\n\t};\r\n\tconst handlePrevious = () => {\r\n\t\tsetCurrentPage(state => state - 1);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{pagedData && (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardHeader style={style.header}>\r\n\t\t\t\t\t\t\tTotal Sales & Profit\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Flat disabled={currentPage === 0} onClick={handlePrevious}>\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon>chevron_left</MaterialIcon>\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat disabled={currentPage >= totalPages - 1} onClick={handleNext}>\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon>chevron_right</MaterialIcon>\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t{sales.meta.hasNext && (\r\n\t\t\t\t\t\t\t\t\t<Flat disabled={loading} onClick={() => loadMore(sales.meta.nextCursor)}>\r\n\t\t\t\t\t\t\t\t\t\t<MaterialIcon>more</MaterialIcon>\r\n\t\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<Bar data={pagedData} options={options} />\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default LatestSales;\r\n","import dateFormatter from './date-formatter';\r\nexport default values => {\r\n\tconst labels = values.map(value => dateFormatter(value.createdAt, 'Do MMM'));\r\n\tconst datasets = [\r\n\t\t{\r\n\t\t\tlabel: 'Sales',\r\n\t\t\tbackgroundColor: '#3949ab',\r\n\t\t\tdata: values.map(value => value.qty),\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Profit($)',\r\n\t\t\tbackgroundColor: '#e0e0e0',\r\n\t\t\tdata: values.map(value => value.profit),\r\n\t\t},\r\n\t];\r\n\treturn { labels, datasets };\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default authToken => {\r\n\treturn axios.create({\r\n\t\tbaseURL: 'https://nestjs-ecommerce-app.herokuapp.com/api/v1',\r\n\t\theaders: {\r\n\t\t\tauthorization: 'Bearer ' + authToken,\r\n\t\t},\r\n\t});\r\n};\r\n","import { Alert } from 'components';\r\n\r\nconst getUserData = () => {\r\n\tlet data = { user: { role: '' }, access_token: '' };\r\n\ttry {\r\n\t\tdata = JSON.parse(localStorage.getItem('loggedIn_user'));\r\n\t\treturn data;\r\n\t} catch (e) {\r\n\t\tAlert({ message: e.message, color: 'red' });\r\n\t\tconsole.log('error getting user ', e);\r\n\t\treturn data;\r\n\t}\r\n};\r\n\r\nexport const isLoggedIn = () => {\r\n\tif (!getUserData()) return false;\r\n\treturn !!getUserData().access_token;\r\n};\r\n\r\nexport const isAdmin = () => {\r\n\tif (!isLoggedIn()) return false;\r\n\tconst userData = getUserData();\r\n\treturn userData.user.role === 'Admin';\r\n};\r\nexport const isCustomer = () => {\r\n\tif (!isLoggedIn()) return false;\r\n\tconst userData = getUserData();\r\n\treturn userData.user.role === 'Customer';\r\n};\r\n\r\nexport const hasOrders = () => {\r\n\tif (!isCustomer()) return false;\r\n\treturn !!getUserData().user.orders;\r\n};\r\nexport const isEmployee = () => {\r\n\tif (!isLoggedIn()) return false;\r\n\tconst userData = getUserData();\r\n\treturn userData.user.role === 'Employee';\r\n};\r\n\r\nexport const authToken = () => {\r\n\treturn getUserData().access_token;\r\n};\r\n\r\nexport const authUser = () => {\r\n\treturn getUserData().user;\r\n};\r\n\r\nexport const signOut = () => {\r\n\tlocalStorage.removeItem('loggedIn_user');\r\n};\r\n\r\nexport const saveUser = user => {\r\n\ttry {\r\n\t\tlocalStorage.setItem('loggedIn_user', JSON.stringify(user));\r\n\t} catch (e) {\r\n\t\tAlert({ message: e.message, color: 'red' });\r\n\t\tconsole.log('error parsing string ', e);\r\n\t}\r\n};\r\nexport const isFromStore = () => {\r\n\tconst cart = localStorage.getItem('user_from_store');\r\n\tif (cart) {\r\n\t\tlocalStorage.removeItem('user_from_store');\r\n\t}\r\n\treturn !!cart;\r\n};\r\nexport const isAdminRoute = location => {\r\n\tconsole.log('location', location);\r\n\treturn location.pathname.startsWith('/admin');\r\n};\r\nexport const isHomeRoute = location => {\r\n\treturn location.pathname === '/';\r\n};\r\nexport const isCustomerRoute = location => {\r\n\treturn location.pathname === '/dashboard' || location.pathname === '/dashboard/';\r\n};\r\nexport const hasRebuildToken = () => {\r\n\tconst user = authUser();\r\n\treturn !!user.rebuild_token;\r\n};\r\n\r\nexport const rebuildToken = () => {\r\n\treturn authUser().rebuild_token;\r\n};\r\n","const columns = [\r\n\t{\r\n\t\tname: 'S/N',\r\n\t\tselector: 'id',\r\n\t\tsortable: true,\r\n\t},\r\n\r\n\t{\r\n\t\tname: 'Customer',\r\n\t\tselector: 'customer',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Quantity',\r\n\t\tselector: 'qty',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Status',\r\n\t\tselector: 'status',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Amount($)',\r\n\t\tselector: 'amount',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Card, CardBody } from 'components/card';\r\nimport { Alert, LinearProgress } from 'components';\r\n\r\nimport client from 'service/client';\r\nimport { authToken } from 'service/auth/auth';\r\nimport { dateFormatter } from 'utils';\r\nimport columns from './columns';\r\n\r\nexport default () => {\r\n\tconst [orders, setOrders] = React.useState([]);\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.get('/orders', {\r\n\t\t\t\tparams: { relation: true },\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\t// console.log('res', res);\r\n\t\t\t\tconst transformedOrders = res.data.data.map((order, i) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...order,\r\n\t\t\t\t\t\tcustomer: order.user.username,\r\n\t\t\t\t\t\tcreatedAt: dateFormatter(order.createdAt),\r\n\t\t\t\t\t\tuser: null,\r\n\t\t\t\t\t\tid: i + 1,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetOrders(transformedOrders);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{!loading && (\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<DataTable title={'Orders Summary'} columns={columns} data={orders} highlightOnHover />\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport client from '../client';\r\n\r\nconst useGet = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tconst makeGetRequest = ({ authToken, params, url }) => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken)\r\n\t\t\t.get(url, { params })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetData(res.data);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t};\r\n\treturn { makeGetRequest, setData, setError, setLoading, loading, error, data };\r\n};\r\n\r\nexport default useGet;\r\n","import React from 'react';\r\n\r\nimport TotalCustomers from './components/total-customers/TotalCustomers';\r\nimport TotalProducts from './components/total-products/TotalProducts';\r\nimport TotalOrders from './components/total-orders/TotalOrders';\r\nimport LatestSales from './components/latest-sales/LatestSales';\r\nimport Orders from './components/orders/OrderTable';\r\n\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Container } from 'components';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { useGet } from 'service/hooks';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport { deDuplicate } from 'utils';\r\n\r\n// import { isAdmin, isCustomer, isEmployee, isLoggedIn } from 'service/auth/auth';\r\n\r\nconst styles = {\r\n\ticon: {\r\n\t\twidth: '50px',\r\n\t\theight: '50px',\r\n\t\ttextAlign: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tcolor: '#fff',\r\n\t},\r\n};\r\nconst Dashboard = () => {\r\n\tconst retrievedSales = React.useRef(null);\r\n\r\n\tconst { makeGetRequest, data, loading, error } = useGet();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/sales',\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tif (data) {\r\n\t\t// console.log('sales ', data);\r\n\t\tlet list;\r\n\t\tif (retrievedSales.current) {\r\n\t\t\tlist = [...retrievedSales.current.data, ...data.data];\r\n\t\t} else {\r\n\t\t\tlist = [...data.data];\r\n\t\t}\r\n\r\n\t\tretrievedSales.current = {\r\n\t\t\tdata: [...deDuplicate(list)],\r\n\t\t\tmeta: data.meta,\r\n\t\t};\r\n\t}\r\n\r\n\tconst loadMore = cursor => {\r\n\t\tconst options = {\r\n\t\t\turl: '/sales',\r\n\t\t\tparams: {\r\n\t\t\t\tcursor,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t<TotalCustomers customerCount={8473} />\r\n\t\t\t\t</GridItem>\r\n\r\n\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t<TotalProducts productCount={632} />\r\n\t\t\t\t</GridItem>\r\n\r\n\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t<TotalOrders orderCount={873} />\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t{retrievedSales.current && retrievedSales.current.data.length > 0 && (\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<LatestSales loading={loading} sales={retrievedSales.current} loadMore={loadMore} />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t)}\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t<Orders />\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Alert } from 'components';\r\nimport { LoginForm } from 'components';\r\n\r\nimport { saveUser } from 'service/auth/auth';\r\n\r\nimport client from 'service/client';\r\n\r\nconst AdminLogin = () => {\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tdocument.body.classList.remove('has-fixed-sidenav');\r\n\t\treturn function cleanup() {\r\n\t\t\tdocument.body.classList.add('has-fixed-sidenav');\r\n\t\t};\r\n\t});\r\n\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tclient()\r\n\t\t\t.post('/auth/login', { username: values.username.trim(), password: values.password.trim() })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tif (res.data.user.role === 'Customer') {\r\n\t\t\t\t\treturn history.replace('/admin');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsaveUser(res.data);\r\n\t\t\t\t\thistory.push('/admin/profile');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t};\r\n\treturn <LoginForm handleSubmit={handleSubmit} adminRoute={true} />;\r\n};\r\n\r\nexport default AdminLogin;\r\n","import React from 'react';\r\n\r\nimport { Normal } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst Delete = ({ onClick, deleting }) => {\r\n\treturn (\r\n\t\t<Normal\r\n\t\t\tdisabled={deleting}\r\n\t\t\tclassName=\"tooltipped red-text btn-flat delete-btn\"\r\n\t\t\tdata-position=\"left\"\r\n\t\t\tdata-tooltip=\"Delete\"\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t<MaterialIcon children={'close'} />\r\n\t\t</Normal>\r\n\t);\r\n};\r\n\r\nexport default Delete;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'Username',\r\n\t\tselector: 'username',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Email',\r\n\t\tselector: 'email',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date Joined',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t\tright: true,\r\n\t},\r\n\t{\r\n\t\tselector: 'edit',\r\n\r\n\t\tright: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport Delete from './DeleteEmployee';\r\nimport { dateFormatter } from 'utils';\r\nimport { Normal } from 'components/buttons';\r\nimport { Card } from 'components/card';\r\n\r\nimport columns from './columns';\r\n\r\nconst actions = openModal => (\r\n\t<Normal onClick={() => openModal()} className=\"right-align indigo \">\r\n\t\tAdd\r\n\t</Normal>\r\n);\r\n\r\nconst Table = ({ data, handleDelete, loading, openModal }) => {\r\n\tconst handleChange = value => {\r\n\t\t// console.log('handle change called ', value);\r\n\t};\r\n\tconst handleRowClick = row => {\r\n\t\t// console.log('clicked row ', row);\r\n\t};\r\n\tconst getEmployeeList = data => {\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t\tedit: <Delete key={item.id} deleting={loading} onClick={() => handleDelete(item.id)} />,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst employees = data ? getEmployeeList(data) : [];\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Employee List\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={employees}\r\n\t\t\t\tonSelectedRowsChange={handleChange}\r\n\t\t\t\tactions={actions(openModal)}\r\n\t\t\t\tpagination\r\n\t\t\t\tnoContextMenu={true}\r\n\t\t\t\tonRowClicked={handleRowClick}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\nexport default Table;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst InputField = ({ id, labelClassName, styleLabel, label, ...rest }) => {\r\n\treturn (\r\n\t\t<div className={clsx(['input-field', { 'login-label': styleLabel }])}>\r\n\t\t\t<Field {...rest} id={id} />\r\n\t\t\t{id && label && (\r\n\t\t\t\t<label className={labelClassName} htmlFor={id}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nInputField.defaultProps = {\r\n\tlabelClassName: 'active',\r\n};\r\nInputField.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tlabelClassName: PropTypes.string,\r\n\tlabel: PropTypes.string,\r\n\tstyleLabel: PropTypes.string,\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst AddForm = ({ handleAdd, closeModal }) => {\r\n\tconst [pass, setPass] = React.useState('');\r\n\r\n\tconst validateForm = values => {\r\n\t\tsetPass(values.password);\r\n\t\tconst errors = {};\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Email Required';\r\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\terrors.email = 'Invalid email address';\r\n\t\t} else if (!values.username) {\r\n\t\t\terrors.username = 'Username Required';\r\n\t\t} else if (!values.password) {\r\n\t\t\terrors.password = 'Password Required';\r\n\t\t} else if (values.password.length < 6) {\r\n\t\t\terrors.password = 'Password length must be greater than 5';\r\n\t\t} else if (!(values.confirm === pass)) {\r\n\t\t\terrors.confirm = 'Confirm password must match password field';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tconst employee = {\r\n\t\t\tusername: values.username,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\trole: 'Employee',\r\n\t\t};\r\n\t\tclient(authToken())\r\n\t\t\t.post('/users', { ...employee })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: 'Employee Successfully Added', color: 'green' });\r\n\t\t\t\tconst newEmployee = {\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\t...res.data,\r\n\t\t\t\t};\r\n\t\t\t\thandleAdd(newEmployee);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\r\n\t\t\t\tconsole.log(e.response);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ email: '', username: '', password: '', confirm: '' }}\r\n\t\t\t\tvalidate={validateForm}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"username\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"password\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"confirm\"\r\n\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tid=\"confirm\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"confirm\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<div className=\" right-align\">\r\n\t\t\t\t\t\t\t\t<Flat onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat type=\"button\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\n\r\nimport Table from './Table';\r\nimport AddForm from './AddForm';\r\n\r\nimport { LinearProgress, Alert, Modal, Container } from 'components';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { authToken } from 'service/auth/auth';\r\n\r\nimport client from 'service/client';\r\n\r\nconst EmployeesList = () => {\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\tconst [deleting, setDeleting] = React.useState(false);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/users',\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Employee',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t\tconst tooltip = document.querySelectorAll('.tooltipped');\r\n\t\t// eslint-disable-next-line\r\n\t\tM.Tooltip.init(tooltip);\r\n\t});\r\n\r\n\tconst handleAdd = employee => {\r\n\t\tcloseModal();\r\n\t\tsetData(state => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: [...state.data, employee],\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst handleDelete = id => {\r\n\t\tsetDeleting(true);\r\n\t\tclient(authToken())\r\n\t\t\t.delete(`/users/${id}`)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetDeleting(false);\r\n\t\t\t\tsetData(state => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tdata: state.data.filter(user => user.id !== id),\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tAlert({ message: 'Successfully Deleted', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetDeleting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t};\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{deleting && <LinearProgress />}\r\n\t\t\t<Modal title=\"Add Employee\">\r\n\t\t\t\t<AddForm handleAdd={handleAdd} closeModal={closeModal} />\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Table openModal={openModal} data={data ? data.data : []} handleDelete={handleDelete} loading={deleting} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default EmployeesList;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'Username',\r\n\t\tselector: 'username',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Email',\r\n\t\tselector: 'email',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Address',\r\n\t\tselector: 'address',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date Joined',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t\t\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst styles = {\r\n\trecipients: {\r\n\t\tresize: 'auto',\r\n\t},\r\n};\r\nconst EmailForm = ({ closeModal, selectedRows }) => {\r\n\tconst [recipients, setRecipients] = React.useState(selectedRows ? selectedRows : ' ');\r\n\tconst [subject, setSubject] = React.useState('');\r\n\tconst [message, setMessage] = React.useState('');\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\r\n\tconst handleOnChange = e => {\r\n\t\tsetRecipients(e.target.value);\r\n\t};\r\n\tconst handleSendEmail = () => {\r\n\t\tif (subject === '' || subject === undefined || message === '' || message === undefined) {\r\n\t\t\tAlert({ message: 'Subject and message fields must be filled in', color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet recipientEmails;\r\n\t\tif (Array.isArray(recipients)) recipientEmails = recipients;\r\n\t\telse {\r\n\t\t\trecipientEmails = recipients.split(',');\r\n\t\t}\r\n\t\tconst email = {\r\n\t\t\tname: 'Tony Smith',\r\n\t\t\temail: 'tonysmith@gmail.com',\r\n\t\t\tsubject,\r\n\t\t\trecipients: recipientEmails,\r\n\t\t\tmessage,\r\n\t\t};\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.post('/email', {\r\n\t\t\t\t...email,\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Email message successfully sent', color: 'green' });\r\n\t\t\t\tconsole.log('res', res);\r\n\t\t\t\tcloseModal();\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetRecipients(selectedRows);\r\n\t}, [selectedRows]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} className=\"input-field\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"email-ids\"\r\n\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\tvalue={recipients ? recipients : ''}\r\n\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\tstyle={styles.recipients}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<label className=\"active\" htmlFor=\"email-ids\">\r\n\t\t\t\t\t\tRecipients\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} className=\"input-field\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"subject\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"validate\"\r\n\t\t\t\t\t\tvalue={subject}\r\n\t\t\t\t\t\tonChange={e => setSubject(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"subject\">Subject</label>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} className=\"input-field\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\tonChange={e => setMessage(e.target.value)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<label htmlFor=\"message\">Message</label>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<div className=\"row right-align\">\r\n\t\t\t\t<Flat onClick={handleSendEmail}>Send</Flat>\r\n\t\t\t\t<Flat onClick={() => closeModal()}>Cancel</Flat>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EmailForm;\r\n","import React from 'react';\r\n\r\nimport { Modal } from 'components';\r\nimport EmailForm from './EmailForm';\r\n\r\nconst EmailModal = ({ closeModal, selectedRows }) => {\r\n\treturn (\r\n\t\t<Modal title=\"Send Email to Selected Customer(s)\" id=\"send-email-modal\">\r\n\t\t\t<EmailForm closeModal={closeModal} selectedRows={selectedRows} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default EmailModal;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Card } from 'components/card';\r\nimport { Normal } from 'components/buttons';\r\n\r\nimport { dateFormatter } from 'utils';\r\nimport columns from './columns';\r\n\r\nimport EmailModal from './EmailModal';\r\n\r\nconst Actions = ({ handleLoadMore, loadingMore }) => (\r\n\t<Normal disabled={loadingMore} onClick={handleLoadMore} className=\"right indigo\">\r\n\t\tLoad more\r\n\t</Normal>\r\n);\r\n\r\nconst contextAction = ({ openModal }) => {\r\n\treturn (\r\n\t\t<Normal className=\"indigo\" onClick={openModal}>\r\n\t\t\tSend Email\r\n\t\t</Normal>\r\n\t);\r\n};\r\nconst Table = ({ response, loadMore, loadingMore }) => {\r\n\tconst { data, meta } = response;\r\n\r\n\tconst [selectedRows, setSelectedRows] = React.useState(null);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\r\n\tconst handleChange = value => {\r\n\t\tsetSelectedRows(value);\r\n\t};\r\n\r\n\tconst getCustomerList = data => {\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst hasMore = meta => {\r\n\t\treturn meta.hasNext;\r\n\t};\r\n\tconst handleRowClicked = row => {\r\n\t\thistory.push('/customers/' + row.id);\r\n\t};\r\n\tconst handleLoadMore = () => {\r\n\t\tloadMore(meta.nextCursor);\r\n\t};\r\n\tconst getEmailsOfSelectedRows = () => {\r\n\t\treturn selectedRows && selectedRows.selectedRows.map(row => row.email);\r\n\t};\r\n\tconst customers = data.length > 0 ? getCustomerList(data) : [];\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<EmailModal closeModal={closeModal} selectedRows={getEmailsOfSelectedRows()} />\r\n\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Customer List\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={customers}\r\n\t\t\t\tactions={hasMore(meta) && <Actions loadingMore={loadingMore} handleLoadMore={handleLoadMore} />}\r\n\t\t\t\tonSelectedRowsChange={handleChange}\r\n\t\t\t\tcontextActions={contextAction({ openModal })}\r\n\t\t\t\tselectableRows\r\n\t\t\t\thighlightOnHover\r\n\t\t\t\tpagination\r\n\t\t\t\tpointerOnHover\r\n\t\t\t\tonRowClicked={handleRowClicked}\r\n\t\t\t\tselectableRowsHighlight\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { useGet } from 'service/hooks';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport { deDuplicate } from 'utils';\r\n\r\nimport Table from './Table';\r\n\r\nconst CustomerList = () => {\r\n\tconst dataStruct = {\r\n\t\tdata: [],\r\n\t\tmeta: {},\r\n\t};\r\n\tconst allCus = React.useRef(dataStruct);\r\n\r\n\tconst { makeGetRequest, data, loading, error } = useGet();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/users',\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tif (data) {\r\n\t\tconst list = [...allCus.current.data, ...data.data];\r\n\t\tallCus.current = {\r\n\t\t\tdata: [...deDuplicate(list)],\r\n\t\t\tmeta: data.meta,\r\n\t\t};\r\n\t}\r\n\r\n\tconst loadMore = cursor => {\r\n\t\tconst options = {\r\n\t\t\turl: '/users',\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t\tcursor,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Table loadingMore={loading} response={allCus.current} loadMore={loadMore} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CustomerList;\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { UserForm } from 'components';\r\nimport { authToken } from 'service/auth/auth';\r\nimport { validateUserForm } from 'utils';\r\nimport client from 'service/client';\r\n\r\nconst EditForm = ({ user, updateUser, closeModal }) => {\r\n\tdelete user.orders;\r\n\tdelete user.updatedAt;\r\n\tdelete user.createdAt;\r\n\r\n\tfor (let key in user) {\r\n\t\tif (user[key] === null) {\r\n\t\t\tuser[key] = '';\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateForm = values => {\r\n\t\treturn validateUserForm(values);\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tclient(authToken())\r\n\t\t\t.put(`/users/${values.id}`, { ...values })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tupdateUser(values);\r\n\t\t\t\tAlert({ message: 'Profile Successfully Edited', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('e ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik initialValues={{ ...user }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<UserForm />\r\n\t\t\t\t\t\t\t<div className=\" right-align\">\r\n\t\t\t\t\t\t\t\t<Flat onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat type=\"button\" onClick={closeModal}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default EditForm;\r\n","export default values => {\r\n\tconst errors = {};\r\n\tif (!values.email) {\r\n\t\terrors.email = 'Email is required';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\terrors.email = 'Invalid email address';\r\n\t} else if (!values.username) {\r\n\t\terrors.username = 'Username is required';\r\n\t} else if (!values.phone) {\r\n\t\terrors.phone = 'Phone is required';\r\n\t} else if (!values.city) {\r\n\t\terrors.city = 'City is required';\r\n\t} else if (!values.state) {\r\n\t\terrors.state = 'State is required';\r\n\t} else if (!values.zip) {\r\n\t\terrors.zip = 'Zip is required';\r\n\t} else if (isNaN(values.zip.split('-').join(''))) {\r\n\t\terrors.zip = 'Zip code must be a number';\r\n\t}\r\n\r\n\treturn errors;\r\n};\r\n","import React from 'react';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { LinearProgress, Alert, Modal, Profile, Container } from 'components';\r\nimport EditForm from './EditForm';\r\n\r\nimport { authUser, isCustomer, authToken, isAdmin } from 'service/auth/auth';\r\n\r\nconst UserProfile = () => {\r\n\tconst { id } = authUser();\r\n\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: `/users/${id}/orders`,\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, [id]);\r\n\t// if (data) {\r\n\t// \tconsole.log('fetched user', data);\r\n\t// }\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\tconst updateUser = editedUser => {\r\n\t\tsetData({\r\n\t\t\t...data,\r\n\t\t\tdata: { ...data.data, ...editedUser },\r\n\t\t});\r\n\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Modal title=\"Edit Profile Info\">\r\n\t\t\t\t{authUser() ? (\r\n\t\t\t\t\t<EditForm closeModal={closeModal} updateUser={updateUser} user={{ ...authUser() }} />\r\n\t\t\t\t) : null}\r\n\t\t\t</Modal>\r\n\t\t\t<Profile user={data && data.data} isCustomer={isCustomer()} isAdmin={isAdmin()} openModal={openModal} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default UserProfile;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'Name',\r\n\t\tselector: 'name',\r\n\t\tsortable: true,\r\n\t},\r\n\r\n\t{\r\n\t\tname: 'Available',\r\n\t\tselector: 'available',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Category',\r\n\t\tselector: 'category',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Price',\r\n\t\tselector: 'price',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date Added',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t\tright: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tprice: '',\r\n\tavailable: '',\r\n\ttotal: '',\r\n\tcategory: '',\r\n};\r\nconst AddForm = ({ updateProductList, closeModal }) => {\r\n\tconst [file, setFile] = React.useState(null);\r\n\tconst [categories, setCategories] = React.useState([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tclient(authToken())\r\n\t\t\t.get('/categories')\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetCategories(res.data.data);\r\n\t\t\t\t// console.log(res);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.name) {\r\n\t\t\terrors.name = 'Name of product is required';\r\n\t\t} else if (!values.description) {\r\n\t\t\terrors.description = 'Description of product is required';\r\n\t\t} else if (!values.price) {\r\n\t\t\terrors.price = 'Price of product is required';\r\n\t\t} else if (!values.total) {\r\n\t\t\terrors.total = 'Quantity of product is required';\r\n\t\t} else if (!values.category) {\r\n\t\t\terrors.category = 'Category of product is required';\r\n\t\t} else if (!values.available) {\r\n\t\t\terrors.available = 'Product availability is required';\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tconst url = '/products';\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'multipart/form-data',\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', file);\r\n\t\tfor (let key in values) {\r\n\t\t\tif (key === 'category') {\r\n\t\t\t\tconst category = categories.filter(cat => cat.name === values[key]);\r\n\t\t\t\tformData.append(key, category[0].id);\r\n\t\t\t} else {\r\n\t\t\t\tformData.append(key, values[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tclient(authToken())\r\n\t\t\t.post(url, formData, config)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: 'Product successfully Added', color: 'green' });\r\n\t\t\t\tupdateProductList({\r\n\t\t\t\t\t...res.data,\r\n\t\t\t\t\t...values,\r\n\t\t\t\t});\r\n\t\t\t\tcloseModal();\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tconsole.log(e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleInput = e => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t};\r\n\r\n\tconst options =\r\n\t\tcategories.length > 0 ? (\r\n\t\t\tcategories.map(category => (\r\n\t\t\t\t<option key={category.id} value={category.name}>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</option>\r\n\t\t\t))\r\n\t\t) : (\r\n\t\t\t<option value=\"\">No categories added yet!</option>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik initialValues={{ ...initialValues }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"name\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"description\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"total\"\r\n\t\t\t\t\t\t\t\tname=\"total\"\r\n\t\t\t\t\t\t\t\tlabel=\"Quantity\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"total\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"price\"\r\n\t\t\t\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\t\t\t\tlabel=\"Price\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"price\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<Field name=\"category\" as=\"select\" style={{ display: 'block', backgroundColor: 'inherit' }}>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Select Category</option>\r\n\t\t\t\t\t\t\t\t{options}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"category\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"available\"\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'block', backgroundColor: 'inherit', marginTop: 15 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"\">Available?</option>\r\n\t\t\t\t\t\t\t\t<option value=\"1\">True</option>\r\n\t\t\t\t\t\t\t\t<option value=\"0\">False</option>\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"category\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t\t\t\t<div className=\"btn indigo\">\r\n\t\t\t\t\t\t\t\t\t<span>Photo</span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"file\" onInput={handleInput} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" onInput={handleInput} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\" right-align\" style={{ marginTop: 20 }}>\r\n\t\t\t\t\t\t\t\t<Flat onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t<Flat disabled={isSubmitting} type=\"button\" onClick={() => closeModal()}>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\n\r\nimport { Modal } from 'components';\r\nimport AddForm from './AddForm';\r\n\r\nconst ProductModal = ({ closeModal, updateProductList }) => {\r\n\treturn (\r\n\t\t<Modal id=\"product-modal\" title=\"Add New Product\">\r\n\t\t\t<AddForm closeModal={closeModal} updateProductList={updateProductList} />\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ProductModal;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport columns from './columns';\r\nimport ProductModal from './ProductModal';\r\n\r\nimport { Card } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport { dateFormatter } from 'utils';\r\n\r\nconst Table = ({ response, loadMore, loadingMore, updateProductList }) => {\r\n\tconst { data, meta } = response;\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\tconst actions = () => (\r\n\t\t<div>\r\n\t\t\t{hasMore(meta) && (\r\n\t\t\t\t<Flat disabled={loadingMore} onClick={handleLoadMore} className=\"right\">\r\n\t\t\t\t\tLoad more\r\n\t\t\t\t</Flat>\r\n\t\t\t)}\r\n\t\t\t<Flat disabled={loadingMore} onClick={openModal} className=\"right\">\r\n\t\t\t\tAdd Product\r\n\t\t\t</Flat>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst getProductList = data => {\r\n\t\treturn data.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t\tcategory: item.category.name,\r\n\t\t\t\tavailable: item.available ? 'true' : 'false',\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst hasMore = meta => {\r\n\t\treturn meta.hasNext;\r\n\t};\r\n\tconst handleRowClicked = row => {\r\n\t\thistory.push('/products/' + row.id);\r\n\t};\r\n\tconst handleLoadMore = () => {\r\n\t\tloadMore(meta.nextCursor);\r\n\t};\r\n\r\n\tconst customers = data.length > 0 ? getProductList(data) : [];\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<ProductModal closeModal={closeModal} updateProductList={updateProductList} />\r\n\t\t\t<DataTable\r\n\t\t\t\ttitle=\"Product List\"\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={customers}\r\n\t\t\t\tactions={actions()}\r\n\t\t\t\thighlightOnHover\r\n\t\t\t\tpagination\r\n\t\t\t\tpointerOnHover\r\n\t\t\t\tonRowClicked={handleRowClicked}\r\n\t\t\t\tselectableRowsHighlight\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { useGet } from 'service/hooks';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\n\r\nimport Table from './Table';\r\n\r\nconst ProductList = () => {\r\n\tconst dataStruct = {\r\n\t\tdata: [],\r\n\t\tmeta: {},\r\n\t};\r\n\tconst allProducts = React.useRef(dataStruct);\r\n\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\r\n\tconst updateProductList = product => {\r\n\t\tsetData(state => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: [...state.data, product],\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/products',\r\n\t\t\tparams: {\r\n\t\t\t\trelation: true,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tconst deDuplicate = list => {\r\n\t\treturn list.reduce((previous, current) => {\r\n\t\t\tlet accumulator = previous;\r\n\t\t\tif (previous.indexOf(current) > -1) {\r\n\t\t\t\treturn previous;\r\n\t\t\t}\r\n\t\t\taccumulator.push(current);\r\n\t\t\treturn accumulator;\r\n\t\t}, []);\r\n\t};\r\n\tif (data) {\r\n\t\t// console.log('products', data);\r\n\t\tconst list = [...allProducts.current.data, ...data.data];\r\n\t\tallProducts.current = {\r\n\t\t\tdata: [...deDuplicate(list)],\r\n\t\t\tmeta: data.meta,\r\n\t\t};\r\n\t}\r\n\r\n\tconst loadMore = cursor => {\r\n\t\tconst options = {\r\n\t\t\turl: '/products',\r\n\t\t\tparams: {\r\n\t\t\t\tcursor,\r\n\t\t\t\trelation: true,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\r\n\t\t\t<Table\r\n\t\t\t\tloadingMore={loading}\r\n\t\t\t\tupdateProductList={updateProductList}\r\n\t\t\t\tresponse={allProducts.current}\r\n\t\t\t\tloadMore={loadMore}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst Collection = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<ul className={clsx(['collection', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nCollection.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default Collection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst CollectionItem = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<li className={clsx(['collection-item', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nCollectionItem.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CollectionItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst CollectionHeader = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<li className={clsx(['collection-header', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nCollectionHeader.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CollectionHeader;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tprice: '',\r\n\tavailable: '',\r\n\ttotal: '',\r\n\tcategory: '',\r\n};\r\nconst SaveChanges = ({ submitForm, isSubmitting, setEdit }) => (\r\n\t<Flat\r\n\t\tclassName=\" right\"\r\n\t\tonClick={() => {\r\n\t\t\tsetEdit(true);\r\n\t\t\tsubmitForm();\r\n\t\t}}\r\n\t\tdisabled={isSubmitting}\r\n\t\ttype=\"submit\"\r\n\t>\r\n\t\tSave Changes\r\n\t</Flat>\r\n);\r\nconst Submit = ({ submitForm, isSubmitting }) => (\r\n\t<Flat className=\"right\" onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\tSubmit\r\n\t</Flat>\r\n);\r\nconst Cancel = ({ closeModal, isSubmitting }) => (\r\n\t<Flat disabled={isSubmitting} type=\"button\" className=\"right\" onClick={() => closeModal()}>\r\n\t\tCancel\r\n\t</Flat>\r\n);\r\n\r\nconst EditForm = ({ updateProductList, closeModal, product, updateProduct }) => {\r\n\tconst [file, setFile] = React.useState(null);\r\n\tconst [categories, setCategories] = React.useState([]);\r\n\tconst [edit, setEdit] = React.useState(false);\r\n\tconst initValues = product || initialValues;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tclient(authToken())\r\n\t\t\t.get('/categories')\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetCategories(res.data.data);\r\n\t\t\t\t// console.log(res);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.name) {\r\n\t\t\terrors.name = 'Name of product is required';\r\n\t\t} else if (!values.description) {\r\n\t\t\terrors.description = 'Description of product is required';\r\n\t\t} else if (!values.price) {\r\n\t\t\terrors.price = 'Price of product is required';\r\n\t\t} else if (!values.total) {\r\n\t\t\terrors.total = 'Quantity of product is required';\r\n\t\t} else if (!values.category) {\r\n\t\t\terrors.category = 'Category of product is required';\r\n\t\t} else if (!values.available) {\r\n\t\t\terrors.available = 'Product availability is required';\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\tconst createFormDataRequest = values => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', file);\r\n\t\tfor (let key in values) {\r\n\t\t\tif (key === 'category') {\r\n\t\t\t\tconst category = values.category.id || categories.filter(cat => cat.name === values[key])[0].id;\r\n\t\t\t\tformData.append(key, category);\r\n\t\t\t} else {\r\n\t\t\t\tformData.append(key, values[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn formData;\r\n\t};\r\n\t/**\r\n\t *\r\n\t * @param {values representing edited changes} values\r\n\t * @param {object passed from Formik} param1\r\n\t *\r\n\t *  Saves user changes\r\n\t */\r\n\tconst saveChanges = (values, { setSubmitting }) => {\r\n\t\tlet url, data;\r\n\t\tlet config = {};\r\n\r\n\t\t//Checks if the user changed the product's image\r\n\t\tif (file) {\r\n\t\t\t//The user  changed the product's image\r\n\t\t\turl = `/products/${product.id}/image`;\r\n\t\t\tconfig.headers = {\r\n\t\t\t\t'content-type': 'multipart/form-data',\r\n\t\t\t};\r\n\t\t\t//Creates a FormData object to post raw image to the server\r\n\t\t\tdata = createFormDataRequest(values);\r\n\t\t} else {\r\n\t\t\t//The user didn't change the product's image\r\n\t\t\turl = `/products/${values.id}`;\r\n\t\t\tdelete values.createdAt;\r\n\t\t\tdelete values.updatedAt;\r\n\t\t\tdata = {\r\n\t\t\t\t...values,\r\n\t\t\t\tavailable: !!+values.available,\r\n\t\t\t\tcategory: values.category.id || categories.filter(cat => cat.name === values.category)[0].id,\r\n\t\t\t};\r\n\t\t}\r\n\t\tclient(authToken())\r\n\t\t\t.put(url, data, config)\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('res', res);\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: 'Product successfully Edited', color: 'green' });\r\n\t\t\t\tif (file) {\r\n\t\t\t\t\tupdateProduct({\r\n\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\timageUrl: res.data.imageUrl,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdateProduct(values);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log(e.response);\r\n\t\t\t});\r\n\t};\r\n\tconst addProduct = (values, { setSubmitting }) => {\r\n\t\tconst url = '/products';\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'multipart/form-data',\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst formData = createFormDataRequest(values);\r\n\r\n\t\tclient(authToken())\r\n\t\t\t.post(url, formData, config)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: 'Product successfully Added', color: 'green' });\r\n\t\t\t\tupdateProductList({\r\n\t\t\t\t\t...res.data,\r\n\t\t\t\t\t...values,\r\n\t\t\t\t});\r\n\t\t\t\tcloseModal();\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log(e.response);\r\n\t\t\t});\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tif (edit) {\r\n\t\t\tsaveChanges(values, { setSubmitting });\r\n\t\t} else {\r\n\t\t\taddProduct(values, { setSubmitting });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInput = e => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t\tconsole.log(e.target.files[0]);\r\n\t};\r\n\r\n\tconst options =\r\n\t\tcategories.length > 0 ? (\r\n\t\t\tcategories.map(category => (\r\n\t\t\t\t<option key={category.id} value={category.name}>\r\n\t\t\t\t\t{category.name}\r\n\t\t\t\t</option>\r\n\t\t\t))\r\n\t\t) : (\r\n\t\t\t<option value=\"\">No categories added yet!</option>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Formik initialValues={{ ...initValues }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"name\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"description\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"total\"\r\n\t\t\t\t\t\t\t\tname=\"total\"\r\n\t\t\t\t\t\t\t\tlabel=\"Qauntity\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"total\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\tid=\"price\"\r\n\t\t\t\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\t\t\t\tlabel=\"Price\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"price\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<label htmlFor=\"category\">Category</label>\r\n\t\t\t\t\t\t\t<Field name=\"category\" as=\"select\" style={{ display: 'block', backgroundColor: 'inherit' }}>\r\n\t\t\t\t\t\t\t\t{product ? (\r\n\t\t\t\t\t\t\t\t\t<option value={product.category.name}>{product.category.name}</option>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<option value=\"\">Select Category</option>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{options}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"category\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t<label htmlFor=\"available\">Still in Stock?</label>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"available\"\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'block', backgroundColor: 'inherit', marginTop: 15 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{product ? (\r\n\t\t\t\t\t\t\t\t\t<option value={product.available ? '1' : '0'}>\r\n\t\t\t\t\t\t\t\t\t\t{product.available ? 'True' : 'False'}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<option value=\"\">Available?</option>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{product && product.available ? (\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\">False</option>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">True</option>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"category\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t\t\t\t<div className=\"btn indigo\">\r\n\t\t\t\t\t\t\t\t\t{product ? <span>Change Photo</span> : <span>Photo</span>}\r\n\t\t\t\t\t\t\t\t\t<input type=\"file\" onInput={handleInput} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" onInput={handleInput} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ marginTop: 20 }}>\r\n\t\t\t\t\t\t\t\t{product ? (\r\n\t\t\t\t\t\t\t\t\t<SaveChanges\r\n\t\t\t\t\t\t\t\t\t\tsetEdit={setEdit}\r\n\t\t\t\t\t\t\t\t\t\tsubmitForm={submitForm}\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<Submit isSubmitting={isSubmitting} submitForm={submitForm} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{!product && <Cancel isSubmitting={isSubmitting} closeModal={closeModal} />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default EditForm;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { dateFormatter } from 'utils';\r\n\r\nimport { Card, CardBody, CardImage, CardReveal, CardHeader } from 'components/card';\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Fab } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { Alert, LinearProgress } from 'components';\r\n\r\nimport client from 'service/client';\r\nimport { authToken } from 'service/auth/auth';\r\n\r\nimport EditForm from './EditForm';\r\n\r\nconst styles = {\r\n\tfabContainer: {\r\n\t\tmarginTop: -25,\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-end',\r\n\t},\r\n};\r\nconst Product = ({ product, updateProduct }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst [deleting, setDeleting] = React.useState(false);\r\n\r\n\tconst productDetail = product => {\r\n\t\tconst localProduct = {\r\n\t\t\tDescription: product.description,\r\n\t\t\tPrice: '$' + product.price,\r\n\t\t\tQuantity: product.total,\r\n\t\t\t'Still In Stock?': !!+product.available ? 'Yes' : 'No',\r\n\t\t\tCategory: product.category.name || product.category,\r\n\t\t\t'Date Added': dateFormatter(product.createdAt),\r\n\t\t};\r\n\t\treturn Object.keys(localProduct).map((key, i) => (\r\n\t\t\t<CollectionItem key={i}>\r\n\t\t\t\t<h6>\r\n\t\t\t\t\t{key}: <span>{localProduct[key]}</span>\r\n\t\t\t\t</h6>\r\n\t\t\t</CollectionItem>\r\n\t\t));\r\n\t};\r\n\tconst handleDeleteClick = () => {\r\n\t\tsetDeleting(true);\r\n\r\n\t\tclient(authToken())\r\n\t\t\t.delete('/products/' + product.id)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetDeleting(false);\r\n\t\t\t\tAlert({ message: `Product with name ${product.name} successfully deleted`, color: 'green' });\r\n\t\t\t\thistory.replace('/products');\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetDeleting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<GridRow>\r\n\t\t\t<GridItem sm={12} md={10} mdOffset={1}>\r\n\t\t\t\t{deleting && <LinearProgress />}\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardImage src={product.imageUrl}>\r\n\t\t\t\t\t\t<div style={styles.fabContainer}>\r\n\t\t\t\t\t\t\t<Fab className=\"btn activator  indigo\" style={{ marginRight: 5 }}>\r\n\t\t\t\t\t\t\t\t<MaterialIcon children={'edit'} />\r\n\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t<Fab onClick={handleDeleteClick} className=\"btn  red\" style={{ marginRight: 5 }}>\r\n\t\t\t\t\t\t\t\t<MaterialIcon children={'delete'} />\r\n\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CardImage>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<Collection className=\"with-header\">\r\n\t\t\t\t\t\t\t<CollectionHeader className=\"center-align indigo-text\">\r\n\t\t\t\t\t\t\t\t<h4>{product.name}</h4>\r\n\t\t\t\t\t\t\t</CollectionHeader>\r\n\r\n\t\t\t\t\t\t\t{productDetail(product)}\r\n\t\t\t\t\t\t</Collection>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t<CardReveal>\r\n\t\t\t\t\t\t<CardHeader className=\"indigo-text center-align\">\r\n\t\t\t\t\t\t\t{product.name}\r\n\t\t\t\t\t\t\t<MaterialIcon children={'close'} className=\"right\" />\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<EditForm product={product} updateProduct={updateProduct} />\r\n\t\t\t\t\t</CardReveal>\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { LinearProgress, Alert, Container } from 'components';\r\n\r\nimport Product from './Product';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\n\r\nconst ProductDetail = () => {\r\n\tconst { id } = useParams();\r\n\r\n\tconst { makeGetRequest, setData, data, loading, error } = useGet();\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: `/products/${id}`,\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, [id]);\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst updateProduct = product => {\r\n\t\tsetData(product);\r\n\t};\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\t// if (data) {\r\n\t// \tconsole.log('product ', data);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{data && <Product product={data} updateProduct={updateProduct} />}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default ProductDetail;\r\n","import React from 'react';\r\n\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst listItem = product => (\r\n\t<CollectionItem className=\"avatar\" key={product.id}>\r\n\t\t<p>\r\n\t\t\t<span className=\"title\">Name: </span>\r\n\t\t\t{product.name}\r\n\t\t\t<br />\r\n\t\t\t<span className=\"title\">Price: </span>\r\n\t\t\t{product.price}\r\n\t\t\t<br />\r\n\t\t\t<span className=\"title\">Still in Stock?: </span>\r\n\t\t\t{!!+product.available ? 'Yes' : 'No'}\r\n\t\t\t<br />\r\n\t\t\t<span className=\"title\">Quantity: </span>\r\n\t\t\t{product.total}\r\n\t\t\t<br />\r\n\t\t</p>\r\n\t\t<Flat className=\"secondary-content red-text delete-btn\">\r\n\t\t\t<MaterialIcon children={'close'} />\r\n\t\t</Flat>\r\n\t</CollectionItem>\r\n);\r\n\r\nconst CategoryProductList = ({ category }) => {\r\n\tconst productList =\r\n\t\tcategory.products.length > 0 ? (\r\n\t\t\tcategory.products.map(product => listItem(product))\r\n\t\t) : (\r\n\t\t\t<CollectionItem>No product under {category.name} category</CollectionItem>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Collection className=\"with-header \" style={{ marginTop: 60 }}>\r\n\t\t\t<CollectionHeader className=\"indigo-text center-align\">\r\n\t\t\t\t<h6>Products on {category.name} Category</h6>\r\n\t\t\t</CollectionHeader>\r\n\t\t\t{productList}\r\n\t\t</Collection>\r\n\t);\r\n};\r\n\r\nexport default CategoryProductList;\r\n","import React from 'react';\r\n\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport CategoryProductList from './CategoryProductList';\r\n\r\nconst AddEditCategory = ({ category, handleSaveChanges, handleDelete, loading, handleSave }) => {\r\n\tconst [categoryValue, setCategoryValue] = React.useState(category);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetCategoryValue(category);\r\n\t}, [category]);\r\n\r\n\tconst handleOnChange = event => {\r\n\t\tconst target = event.target;\r\n\t\tsetCategoryValue(state => ({\r\n\t\t\t...state,\r\n\t\t\tname: target.value,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst handleOnSaveChangesClicked = () => {\r\n\t\thandleSaveChanges(categoryValue);\r\n\t};\r\n\tconst handleSaveClicked = () => {\r\n\t\thandleSave(categoryValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridRow style={{ marginTop: 20 }}>\r\n\t\t\t<GridItem sm={12} md={8} mdOffset={2} className=\"input-field\">\r\n\t\t\t\t<label className=\"active\" htmlFor=\"category\">\r\n\t\t\t\t\tName of category\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Enter name of category\"\r\n\t\t\t\t\tid=\"category\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tvalue={categoryValue ? categoryValue.name : ''}\r\n\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t/>\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem sm={12} className=\"right-align\" style={{ marginTop: 30 }}>\r\n\t\t\t\t{!category && (\r\n\t\t\t\t\t<Flat disabled={loading} onClick={handleSaveClicked}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t)}\r\n\t\t\t\t{category && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Flat disabled={loading} onClick={handleOnSaveChangesClicked}>\r\n\t\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t<Flat onClick={() => handleDelete(category.id)} disabled={loading} className=\"delete-category\">\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</GridItem>\r\n\t\t\t{category && (\r\n\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t<CategoryProductList category={category} />\r\n\t\t\t\t</GridItem>\r\n\t\t\t)}\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default AddEditCategory;\r\n","import React from 'react';\r\n\r\nimport { LinearProgress, Alert, Container } from 'components';\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { Fab } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Card, CardBody, CardReveal, CardHeader } from 'components/card';\r\nimport AddEditCategory from './AddEditCategory';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst Categories = () => {\r\n\tconst { makeGetRequest, setData, setLoading, setError, data, loading, error } = useGet();\r\n\tconst [editableCategory, setEditableCategory] = React.useState(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: '/categories',\r\n\t\t\tparams: {\r\n\t\t\t\trelation: true,\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, []);\r\n\r\n\tconst handleSaveChanges = category => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.put('/categories/' + category.id, { name: category.name, total: category.total })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Successfully Edited', color: 'green' });\r\n\t\t\t\tsetData(state => {\r\n\t\t\t\t\tconst newCategoryList = state.data.map(cat => {\r\n\t\t\t\t\t\tif (cat.id === category.id) {\r\n\t\t\t\t\t\t\treturn category;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn cat;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tdata: [...newCategoryList],\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleDelete = id => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.delete('/categories/' + id)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Successfully Edited', color: 'green' });\r\n\t\t\t\tsetData(state => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdata: [...state.data.filter(category => category.id === id)],\r\n\t\t\t\t}));\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\tconst handleSave = category => {\r\n\t\tsetLoading(true);\r\n\t\tclient(authToken())\r\n\t\t\t.post('/categories', category)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tAlert({ message: 'Successfully Saved', color: 'green' });\r\n\r\n\t\t\t\tsetData(state => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tdata: [...state.data, { ...res.data, products: [] }],\r\n\t\t\t\t}));\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e);\r\n\t\t\t\tconsole.log('error ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red' });\r\n\t}\r\n\t// if (data) {\r\n\t// \tconsole.log('categories ', data);\r\n\t// }\r\n\tconst categoryList =\r\n\t\tdata && data.data.length > 0\r\n\t\t\t? data.data.map(category => (\r\n\t\t\t\t\t<CollectionItem\r\n\t\t\t\t\t\tonClick={() => setEditableCategory(category)}\r\n\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\tclassName=\"category-item activator\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t</CollectionItem>\r\n\t\t\t  ))\r\n\t\t\t: 'No product category added yet';\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} md={10} mdOffset={1}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardBody className=\"categories\">\r\n\t\t\t\t\t\t\t\t<Fab className=\"btn-large activator halfway-fab  indigo\">\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon children={'add'} />\r\n\t\t\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t\t\t\t<Collection className=\"with-header\">\r\n\t\t\t\t\t\t\t\t\t<CollectionHeader>\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"indigo-text center-align\">Product Categories</h5>\r\n\t\t\t\t\t\t\t\t\t</CollectionHeader>\r\n\t\t\t\t\t\t\t\t\t{categoryList}\r\n\t\t\t\t\t\t\t\t</Collection>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardReveal>\r\n\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\tclassName=\"indigo-text center-align\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => setEditableCategory(null)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{editableCategory ? 'Edit Category' : 'Add New Category'}\r\n\t\t\t\t\t\t\t\t\t<MaterialIcon children={'close'} className=\"right\" />\r\n\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t<AddEditCategory\r\n\t\t\t\t\t\t\t\t\tcategory={editableCategory}\r\n\t\t\t\t\t\t\t\t\thandleSaveChanges={handleSaveChanges}\r\n\t\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\t\t\t\t\t\thandleSave={handleSave}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</CardReveal>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { Card, CardHeader, CardBody } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nimport { authToken } from 'service/auth/auth';\r\nimport client from 'service/client';\r\n\r\nconst style = {\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst EditAccountForm = ({ user, updateUser }) => {\r\n\tdelete user.updatedAt;\r\n\tdelete user.createdAt;\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Email Required';\r\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\terrors.email = 'Invalid email address';\r\n\t\t} else if (!values.username) {\r\n\t\t\terrors.username = 'Username Required';\r\n\t\t} else if (user.role === 'Employee') {\r\n\t\t\tif (!values.address) {\r\n\t\t\t\terrors.address = 'Address Required';\r\n\t\t\t} else if (!values.city) {\r\n\t\t\t\terrors.city = 'City Required';\r\n\t\t\t} else if (!values.state) {\r\n\t\t\t\terrors.state = 'State Required';\r\n\t\t\t} else if (!values.zip) {\r\n\t\t\t\terrors.zip = 'Zip Required';\r\n\t\t\t} else if (isNaN(values.zip.split('-').join(''))) {\r\n\t\t\t\terrors.zip = 'Zip code must be a number';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tclient(authToken())\r\n\t\t\t.put(`/users/${values.id}`, { ...values })\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tupdateUser(values);\r\n\t\t\t\tAlert({ message: 'Profile Successfully Edited', color: 'green' });\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetSubmitting(false);\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('e ', e.response);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card style={{ padding: 40, paddingTop: 0 }}>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<CardHeader className=\"center-align\" style={{ paddingBottom: 20 }} children=\"Edit Profile Details\" />\r\n\r\n\t\t\t\t<Formik initialValues={{ ...user }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"username\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"address\"\r\n\t\t\t\t\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Address\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"address\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"City\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"city\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"State\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"state\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tid=\"zip\"\r\n\t\t\t\t\t\t\t\t\tname=\"zip\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Zip\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\tlabelClassName=\"active\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"zip\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<Flat className=\"right \" onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default EditAccountForm;\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\nimport { LinearProgress } from 'components';\r\nimport { Card, CardHeader, CardBody } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\nimport { InputField } from 'components/material-fields';\r\n\r\n// import client from 'service/client';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst EditPassword = ({ handleAdd }) => {\r\n\tconst [pass, setPass] = React.useState('');\r\n\r\n\tconst validateForm = values => {\r\n\t\tsetPass(values.password);\r\n\t\tconst errors = {};\r\n\t\tif (!values.password) {\r\n\t\t\terrors.password = 'Password Required';\r\n\t\t} else if (values.password.length < 6) {\r\n\t\t\terrors.password = 'Password length must be greater than 5';\r\n\t\t} else if (!(values.confirm === pass)) {\r\n\t\t\terrors.confirm = 'Confirm password must match password field';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleSubmit = (values, { setSubmitting }) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetSubmitting(false);\r\n\t\t\t// history.push('/admin/dashboard');\r\n\t\t}, 4000);\r\n\t};\r\n\treturn (\r\n\t\t<Card style={{ paddingBottom: 40 }}>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<CardHeader style={{ paddingBottom: 20 }} children=\"Reset Password\" />\r\n\r\n\t\t\t\t<Formik initialValues={{ password: '', confirm: '' }} validate={validateForm} onSubmit={handleSubmit}>\r\n\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"password\" component=\"div\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\tname=\"confirm\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\tstyle={style.input}\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"confirm\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage name=\"confirm\" component=\"div\" style={{ color: 'red' }} />\r\n\r\n\t\t\t\t\t\t\t\t<Flat className=\"right\" onClick={submitForm} disabled={isSubmitting} type=\"submit\">\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default EditPassword;\r\n","import React from 'react';\r\n\r\nimport EditAccountForm from './EditAccountForm';\r\nimport EditPassword from './EditPassword';\r\n\r\nimport { GridRow, GridItem } from 'components/grid';\r\n\r\nimport { authUser } from 'service/auth/auth';\r\nimport { Container } from 'components';\r\n\r\nconst Settings = () => {\r\n\tconst user = authUser();\r\n\r\n\tfor (let key in user) {\r\n\t\tif (user[key] === null) {\r\n\t\t\tuser[key] = '';\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"center-align indigo-text\" style={{ marginBottom: 30 }}>\r\n\t\t\t\tAccount Settings\r\n\t\t\t</h3>\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t\t<EditAccountForm user={user} />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t\t<EditPassword />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { useGet } from 'service/hooks';\r\nimport { LinearProgress, Alert, Profile, Container } from 'components';\r\n\r\nimport { authToken, isAdmin, isCustomer } from 'service/auth/auth';\r\n\r\nconst CustomerProfile = () => {\r\n\tconst { id } = useParams();\r\n\r\n\tconst { makeGetRequest, data, loading, error } = useGet();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst options = {\r\n\t\t\turl: `/users/${id}/orders`,\r\n\t\t\tparams: {\r\n\t\t\t\trole: 'Customer',\r\n\t\t\t},\r\n\t\t\tauthToken: authToken(),\r\n\t\t};\r\n\t\tmakeGetRequest(options);\r\n\t}, [id]);\r\n\r\n\tif (error) {\r\n\t\tAlert({ message: error.message, color: 'red', outDuration: 500 });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t<Profile user={data && data.data} isAdmin={isAdmin()} isCustomer={isCustomer()} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default CustomerProfile;\r\n","import { useState } from 'react';\r\nimport { Base64 } from 'js-base64';\r\nimport { rebuildToken, authUser } from './auth/auth';\r\nimport gitClient from './gitClient';\r\nimport { Alert } from 'components';\r\n\r\nconst options = {\r\n\towner: 'iammrsea',\r\n\trepo: 'ecommerce',\r\n\tpath: 'rebuild/data.json',\r\n};\r\n\r\nconst client = () => {\r\n\treturn gitClient(rebuildToken());\r\n};\r\n\r\nconst getContents = options => {\r\n\treturn client().repos.getContents(options);\r\n};\r\nconst saveContents = options => {\r\n\treturn client().repos.createOrUpdateFile(options);\r\n};\r\n\r\nconst useRebuild = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst rebuild = async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst {\r\n\t\t\t\tdata: { sha, content },\r\n\t\t\t} = await getContents(options);\r\n\r\n\t\t\tlet decodedContent = JSON.parse(Base64.decode(content));\r\n\t\t\tif (!Object.keys(decodedContent).length > 0) {\r\n\t\t\t\tconst newContent = {\r\n\t\t\t\t\t[authUser().username]: {\r\n\t\t\t\t\t\trequest: 'rebuild site',\r\n\t\t\t\t\t\tdate: new Date().toISOString(),\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tawait saveContents({\r\n\t\t\t\t\t...options,\r\n\t\t\t\t\tmessage: 'A request to rebuild site',\r\n\t\t\t\t\tcontent: Base64.encode(JSON.stringify(newContent)),\r\n\t\t\t\t\tsha,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdecodedContent[authUser().username] = {\r\n\t\t\t\t\trequest: 'rebuild site',\r\n\t\t\t\t\tdate: new Date().toISOString(),\r\n\t\t\t\t};\r\n\t\t\t\tawait saveContents({\r\n\t\t\t\t\t...options,\r\n\t\t\t\t\tmessage: 'A request to rebuild site',\r\n\t\t\t\t\tcontent: Base64.encode(JSON.stringify(decodedContent)),\r\n\t\t\t\t\tsha,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t\tAlert({ message: 'Request successfully sent', color: 'green' });\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e);\r\n\t\t}\r\n\t};\r\n\treturn { rebuild, loading, error };\r\n};\r\n\r\nexport default useRebuild;\r\n","import { Octokit } from '@octokit/rest';\r\n\r\nexport default accessToken => {\r\n\treturn new Octokit({\r\n\t\tauth: accessToken,\r\n\t});\r\n};\r\n","import React from 'react';\r\n\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Card, CardBody, CardHeader, CardAction } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\nimport { Container, Alert, LinearProgress } from 'components';\r\nimport useRebuild from 'service/rebuild';\r\nimport { hasRebuildToken } from 'service/auth/auth';\r\n\r\nconst Rebuild = () => {\r\n\tconst { rebuild, loading, error } = useRebuild();\r\n\r\n\tconst handleGenerateClick = async () => {\r\n\t\tif (!hasRebuildToken()) {\r\n\t\t\treturn Alert({ message: \"You don't have the admin permission to perform this action\", color: 'orange' });\r\n\t\t}\r\n\r\n\t\trebuild();\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t{loading && <LinearProgress />}\r\n\t\t\t\t\t{error && Alert({ message: error.message, color: 'red' })}\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<CardHeader className=\"indigo-text\">Re-generate the store</CardHeader>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tYou are only expected to re-generate the store, the customer-facing end, whenever you\r\n\t\t\t\t\t\t\t\tmake changes to your products and categories and you wish the customers to see those\r\n\t\t\t\t\t\t\t\tchanges when they visit your website. Other than this scenario, you should have no\r\n\t\t\t\t\t\t\t\treasons to perform this action. Click the button bellow to re-generate.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t<CardAction className=\"right-align\">\r\n\t\t\t\t\t\t\t<Flat onClick={handleGenerateClick}>Generate</Flat>\r\n\t\t\t\t\t\t</CardAction>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Rebuild;\r\n","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { signOut } from 'service/auth/auth';\r\n\r\nconst Navbar = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tsignOut();\r\n\t\thistory.replace('/login');\r\n\t};\r\n\tconst handleLogoClick = () => {\r\n\t\twindow.location = '/';\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"navbar-fixed\">\r\n\t\t\t<nav className=\"navbar indigo\">\r\n\t\t\t\t<div className=\"nav-wrapper\">\r\n\t\t\t\t\t<span onClick={handleLogoClick} className=\"brand-logo link waves-effect white-text\">\r\n\t\t\t\t\t\tWDYF\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<ul id=\"nav-mobile\" className=\"right\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<span onClick={handleSignOut} className=\" waves-effect white-text\">\r\n\t\t\t\t\t\t\t\tSignOut\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"hide-on-med-and-down\">\r\n\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\tto=\"/settings\"\r\n\t\t\t\t\t\t\t\tdata-target=\"chat-dropdown\"\r\n\t\t\t\t\t\t\t\tclassName=\"white-text dropdown-trigger waves-effect\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MaterialIcon children={'settings'} />\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<NavLink to=\"#!\" data-target=\"sidenav-left\" className=\"sidenav-trigger left\">\r\n\t\t\t\t\t\t<MaterialIcon children={'menu'} className=\"white-text\" />\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nconst styles = {\r\n\tbrand: {\r\n\t\tpaddingTop: 10,\r\n\t\tpaddingBottom: 10,\r\n\t\tpaddingLeft: 35,\r\n\t\tborder: ' solid 2px #f5f5f5',\r\n\t},\r\n};\r\nconst Brand = () => {\r\n\tconst handleLogoClick = () => {\r\n\t\twindow.location = '/';\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"logo\" style={styles.brand}>\r\n\t\t\t<span className=\"logo-container\" onClick={handleLogoClick} style={{ borderBottom: 0, cursor: 'pointer' }}>\r\n\t\t\t\tAdmin\r\n\t\t\t\t<MaterialIcon children={'view_comfy'} className=\"left\" />\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Brand;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nimport { Collection, CollectionItem } from 'components/collections';\r\nimport Brand from './Brand';\r\n\r\nconst Sidebar = ({ pages, closeSidenav }) => {\r\n\tconst activeRoute = routeName => {\r\n\t\tconst urlParts = routeName.split('/');\r\n\t\treturn window.location.href.endsWith(urlParts[urlParts.length - 1]);\r\n\t};\r\n\tconst items =\r\n\t\tpages.length > 0 &&\r\n\t\tpages.map((page, i) => (\r\n\t\t\t<CollectionItem key={page.name + i} onClick={closeSidenav}>\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto={page.url}\r\n\t\t\t\t\tactiveClassName={clsx({ active: activeRoute(page.url) })}\r\n\t\t\t\t\tclassName=\"waves-effect waves-blue \"\r\n\t\t\t\t>\r\n\t\t\t\t\t{page.name}\r\n\t\t\t\t\t{page.icon}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</CollectionItem>\r\n\t\t));\r\n\treturn (\r\n\t\t<div id=\"sidenav-left\" className=\"sidenav sidenav-fixed white\" style={{ borderRight: 'solid 3px #f5f5f5' }}>\r\n\t\t\t<Brand />\r\n\t\t\t<Collection style={{ marginTop: 0 }}>{items}</Collection>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Sidebar;\r\n\r\nSidebar.propTypes = {\r\n\tpages: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nimport { Container } from 'components';\r\nimport { GridRow, GridItem } from 'components/grid';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"page-footer indigo darken-4 white-text\">\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={4} smOffset={2} md={3} mdOffset={3}>\r\n\t\t\t\t\t\t<h5>About</h5>\r\n\t\t\t\t\t\t<ul className=\"white-text\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tBlog\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={4} smOffset={2} md={3} mdOffset={3}>\r\n\t\t\t\t\t\t<h5>Contact</h5>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tTwitter\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tFacebook\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tGithub\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<div className=\"footer-copyright center-align\">\r\n\t\t\t\t\t\t\t<Container>© {new Date().getFullYear()} wedoyourfarm.com</Container>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport {\r\n\tDashboard,\r\n\tRebuildView,\r\n\tEmployeeView,\r\n\tCustomerView,\r\n\tUserProfileView,\r\n\tProductView,\r\n\tCategoryView,\r\n\tSettingView,\r\n} from 'views';\r\n\r\nexport default [\r\n\t{\r\n\t\turl: '/dashboard',\r\n\t\tname: 'Dashboard',\r\n\t\ticon: <i className=\"material-icons\">dashboard</i>,\r\n\t\tcomponent: <Dashboard />,\r\n\t},\r\n\t{\r\n\t\turl: '/profile',\r\n\t\tname: 'User Profile',\r\n\t\ticon: <i className=\"material-icons\">person</i>,\r\n\t\tcomponent: <UserProfileView />,\r\n\t},\r\n\t{\r\n\t\turl: '/employees',\r\n\t\tname: 'Employees',\r\n\t\ticon: <i className=\"material-icons\">people</i>,\r\n\t\tcomponent: <EmployeeView />,\r\n\t},\r\n\t{\r\n\t\turl: '/customers',\r\n\t\tname: 'Customers',\r\n\t\ticon: <i className=\"material-icons\">people</i>,\r\n\t\tcomponent: <CustomerView />,\r\n\t},\r\n\t{\r\n\t\turl: '/products',\r\n\t\tname: 'Products',\r\n\t\ticon: <i className=\"material-icons\">shopping_basket</i>,\r\n\t\tcomponent: <ProductView />,\r\n\t},\r\n\t{\r\n\t\turl: '/categories',\r\n\t\tname: 'Categories',\r\n\t\ticon: <i className=\"material-icons\">category</i>,\r\n\t\tcomponent: <CategoryView />,\r\n\t},\r\n\t{\r\n\t\turl: '/settings',\r\n\t\tname: 'Settings',\r\n\t\ticon: <i className=\"material-icons\">settings</i>,\r\n\t\tcomponent: <SettingView />,\r\n\t},\r\n\t{\r\n\t\turl: '/rebuild',\r\n\t\tname: 'Re-Build',\r\n\t\ticon: <i className=\"material-icons\">build</i>,\r\n\t\tcomponent: <RebuildView />,\r\n\t},\r\n];\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'materialize-css';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Sidebar from './components/Sidebar';\r\nimport Footer from './components/Footer';\r\n\r\nimport pages from 'routes';\r\nimport { isAdmin, isEmployee, isCustomer } from 'service/auth/auth';\r\n\r\nconst routes = () => {\r\n\tif (isAdmin()) return pages;\r\n\tif (isEmployee() || isCustomer()) return pages.filter(route => route.name !== 'Employees');\r\n};\r\n\r\nconst Admin = ({ children }) => {\r\n\tconst sideNav = React.useRef(null);\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.sidenav');\r\n\t\t// eslint-disable-next-line\r\n\t\tsideNav.current = M.Sidenav.init(elems);\r\n\t});\r\n\tconst handleCloseSidenav = () => {\r\n\t\tsideNav.current[0].close();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Sidebar pages={routes()} closeSidenav={handleCloseSidenav} />\r\n\t\t\t<main>{children}</main>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nAdmin.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Admin;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom';\r\n\r\nimport { AdminLogin, ProductDetailView, CustomerProfileView } from 'views';\r\n\r\n// import StoreRoutings from 'views/store/StoreRouting';\r\n\r\nimport { isLoggedIn, isCustomer, isHomeRoute } from 'service/auth/auth';\r\n\r\nimport { AdminLayout } from 'layouts';\r\n\r\nexport default ({ routes }) => {\r\n\tconst location = useLocation();\r\n\tconst allowedRoutes = routes.map((route, i) => (\r\n\t\t<Route\r\n\t\t\tkey={route.name + i}\r\n\t\t\tpath={route.url}\r\n\t\t\texact\r\n\t\t\trender={() => {\r\n\t\t\t\tif (isLoggedIn() && !isCustomer()) {\r\n\t\t\t\t\treturn <AdminLayout>{route.component}</AdminLayout>;\r\n\t\t\t\t}\r\n\t\t\t\treturn <Redirect to=\"/login\" />;\r\n\t\t\t}}\r\n\t\t/>\r\n\t));\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath=\"/login\"\r\n\t\t\t\trender={() => {\r\n\t\t\t\t\tif (isLoggedIn() && !isCustomer()) return <Redirect to=\"/dashboard\" />;\r\n\t\t\t\t\treturn <AdminLogin />;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath=\"/customers/:id\"\r\n\t\t\t\trender={() => {\r\n\t\t\t\t\tif (isLoggedIn() && !isCustomer()) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<AdminLayout>\r\n\t\t\t\t\t\t\t\t<CustomerProfileView />\r\n\t\t\t\t\t\t\t</AdminLayout>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <Redirect to=\"/login\" />;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Route\r\n\t\t\t\texact\r\n\t\t\t\tpath=\"/products/:id\"\r\n\t\t\t\trender={() => {\r\n\t\t\t\t\tif (isLoggedIn() && !isCustomer())\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<AdminLayout>\r\n\t\t\t\t\t\t\t\t<ProductDetailView />\r\n\t\t\t\t\t\t\t</AdminLayout>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\treturn <Redirect to=\"/login\" />;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{allowedRoutes}\r\n\t\t\t{!isHomeRoute(location) && <Redirect to=\"/login\" />}\r\n\t\t</Switch>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nexport default props => {\r\n\treturn (\r\n\t\t<div className=\"progress indigo\" {...props}>\r\n\t\t\t<div className=\"indeterminate indigo lighten-4\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export default ({ message, color, outDuration }) => {\r\n\t// eslint-disable-next-line\r\n\tM.toast({ html: message, classes: color, outDuration: outDuration ? outDuration : 375 });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Card } from 'components/card';\r\n\r\nconst Modal = ({ children, id, title }) => {\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div id={id} className=\"modal\">\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<h5 className=\"center-align indigo-text\">{title}</h5>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tid: PropTypes.string,\r\n\ttitle: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children, ...rest }) => {\r\n\treturn <div className=\"container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\nexport default Container;\r\n","const columns = [\r\n\t{\r\n\t\tname: 'S/N',\r\n\t\tselector: 'id',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Quantity',\r\n\t\tselector: 'qty',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Status',\r\n\t\tselector: 'status',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Amount($)',\r\n\t\tselector: 'amount',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tname: 'Date',\r\n\t\tselector: 'createdAt',\r\n\t\tsortable: true,\r\n\t},\r\n];\r\n\r\nexport default columns;\r\n","import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Card, CardHeader, CardReveal, CardBody } from 'components/card';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { GridItem, GridRow } from 'components/grid';\r\nimport { Collection, CollectionItem } from 'components/collections';\r\n\r\nimport { dateFormatter } from 'utils';\r\nimport columns from './columns';\r\n\r\nconst OrderTable = ({ orders, title }) => {\r\n\tconst [clickedRow, setClickedRow] = React.useState(null);\r\n\tconst activator = React.useRef(null);\r\n\r\n\tconst handleRowClicked = row => {\r\n\t\tsetClickedRow(row);\r\n\t\tactivator.current.click();\r\n\t};\r\n\tconst getProducts = items => {\r\n\t\tconst products = JSON.parse(items);\r\n\t\treturn products.map(product => (\r\n\t\t\t<div key={product.id + product.name}>\r\n\t\t\t\tName: {product.name}, Qty: {product.qty}\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\tconst getOrderList = orders => {\r\n\t\treturn orders.map((item, i) => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\tcreatedAt: dateFormatter(item.createdAt),\r\n\t\t\t\tid: i + 1,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tconst orderList = orders.length > 0 ? getOrderList(orders) : orders;\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<button ref={activator} className=\"activator\" style={{ display: 'none' }}></button>\r\n\t\t\t\t<DataTable\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdata={orderList}\r\n\t\t\t\t\thighlightOnHover\r\n\t\t\t\t\tpointerOnHover\r\n\t\t\t\t\tonRowClicked={handleRowClicked}\r\n\t\t\t\t/>\r\n\t\t\t</CardBody>\r\n\t\t\t<CardReveal>\r\n\t\t\t\t<CardHeader className=\"indigo-text center-align\">\r\n\t\t\t\t\tOrder Details\r\n\t\t\t\t\t<MaterialIcon children={'close'} className=\"right\" />\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t{clickedRow && (\r\n\t\t\t\t\t<Collection>\r\n\t\t\t\t\t\t<CollectionItem>\r\n\t\t\t\t\t\t\t<GridRow>\r\n\t\t\t\t\t\t\t\t<GridItem sm={12} md={4}>\r\n\t\t\t\t\t\t\t\t\t<div>Product(s) Ordered:</div>\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\r\n\t\t\t\t\t\t\t\t<GridItem sm={12} md={8}>\r\n\t\t\t\t\t\t\t\t\t{getProducts(clickedRow.items)}\r\n\t\t\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t\t</GridRow>\r\n\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Total Quantity: {clickedRow.qty}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Total Amount: {clickedRow.amount}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Status: {clickedRow.status}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Date Ordered: {clickedRow.createdAt}</CollectionItem>\r\n\t\t\t\t\t\t<CollectionItem>Currency: {clickedRow.currency}</CollectionItem>\r\n\t\t\t\t\t</Collection>\r\n\t\t\t\t)}\r\n\t\t\t</CardReveal>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default OrderTable;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { dateFormatter } from 'utils';\r\nimport OrderTable from './customer/OrderTable';\r\n\r\nimport { Card, CardBody } from 'components/card';\r\nimport { Collection, CollectionHeader, CollectionItem } from 'components/collections';\r\nimport { Fab, Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nimport { signOut } from 'service/auth/auth';\r\n\r\nconst styles = {\r\n\tuserField: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n};\r\n\r\nexport default ({ user, isCustomer, openModal }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst userDetail = user => {\r\n\t\tconst localUser = {\r\n\t\t\tUsername: user.username,\r\n\t\t\tEmail: user.email,\r\n\t\t\tPhone: user.phone,\r\n\t\t\tCity: user.city,\r\n\t\t\tState: user.state,\r\n\t\t\tZip: user.zip,\r\n\t\t};\r\n\t\treturn Object.keys(localUser).map((key, i) => (\r\n\t\t\t<CollectionItem key={i}>\r\n\t\t\t\t<span style={styles.userField}>{key}: </span>\r\n\t\t\t\t{localUser[key]}\r\n\t\t\t</CollectionItem>\r\n\t\t));\r\n\t};\r\n\tconst signOutCustomer = () => {\r\n\t\tsignOut();\r\n\t\thistory.replace('/login');\r\n\t};\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t{user && (\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<Collection className=\"with-header\">\r\n\t\t\t\t\t\t<CollectionHeader className=\"indigo-text\">\r\n\t\t\t\t\t\t\t<span className=\"user-profile-detail-title\">\r\n\t\t\t\t\t\t\t\t{!isCustomer && user.role === 'Customer' ? 'Customer Profile' : 'User Profile Details'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</CollectionHeader>\r\n\t\t\t\t\t\t{userDetail(user)}\r\n\t\t\t\t\t\t{user.role === 'Customer' && (\r\n\t\t\t\t\t\t\t<CollectionItem>\r\n\t\t\t\t\t\t\t\t<span style={styles.userField}>Date Joined:</span> {dateFormatter(user.createdAt)}\r\n\t\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{isCustomer && (\r\n\t\t\t\t\t\t\t<CollectionItem className=\"right\">\r\n\t\t\t\t\t\t\t\t<Flat onClick={signOutCustomer}>SignOut</Flat>\r\n\t\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Collection>\r\n\t\t\t\t\t{isCustomer && (\r\n\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\tstyle={{ marginTop: 20 }}\r\n\t\t\t\t\t\t\tonClick={() => openModal()}\r\n\t\t\t\t\t\t\tclassName=\"halfway-fab  right indigo\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MaterialIcon children={'edit'} />\r\n\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!isCustomer && user.role !== 'Customer' && (\r\n\t\t\t\t\t\t<Fab\r\n\t\t\t\t\t\t\tstyle={{ marginTop: 20 }}\r\n\t\t\t\t\t\t\tonClick={() => history.push('/settings')}\r\n\t\t\t\t\t\t\tclassName=\"right halfway-fab  indigo\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MaterialIcon children={'edit'} />\r\n\t\t\t\t\t\t</Fab>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</CardBody>\r\n\t\t\t)}\r\n\t\t\t<div id=\"order-table\">\r\n\t\t\t\t{user && user.role === 'Customer' && (\r\n\t\t\t\t\t<OrderTable\r\n\t\t\t\t\t\ttitle={isCustomer ? <span>Your Orders</span> : <span>Customer Orders</span>}\r\n\t\t\t\t\t\torders={user && user.orders ? user.orders : []}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LinearProgress, Container } from 'components';\r\nimport { InputField } from 'components/material-fields';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { SignInUp } from 'components/buttons';\r\n\r\nconst style = {\r\n\tlogin: {\r\n\t\theight: '100vh',\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\theader: {\r\n\t\tmarginTop: 0,\r\n\t\tpadding: 40,\r\n\t},\r\n\tinput: {\r\n\t\tpadding: '15px',\r\n\t\tborderRadius: '5px',\r\n\t\tboxSizing: 'border-box',\r\n\t\tcolor: '#fff',\r\n\t\tfontSize: '18px',\r\n\t},\r\n};\r\n\r\nconst LoginForm = ({ handleSubmit, adminRoute }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst validateForm = values => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.username) {\r\n\t\t\terrors.username = 'Username is required';\r\n\t\t} else if (!values.password) {\r\n\t\t\terrors.password = 'Password is required';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\tconst handleRegisterClick = () => {\r\n\t\thistory.push('/register');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridRow className=\"grey lighten-5 login\" style={style.login}>\r\n\t\t\t<h2 className=\"header center-align white-text\" style={style.header}>\r\n\t\t\t\tSign In\r\n\t\t\t</h2>\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} md={8} mdOffset={2}>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\tinitialValues={{ username: '', password: '' }}\r\n\t\t\t\t\t\t\tvalidate={validateForm}\r\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ isSubmitting, submitForm }) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting && <LinearProgress />}\r\n\t\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\tstyleLabel=\"login-label\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...style.input, marginBottom: 20 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange', marginBottom: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyleLabel=\"login-label\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...style.input }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'orange', marginBottom: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\" right-align\">\r\n\t\t\t\t\t\t\t\t\t\t\t{!adminRoute && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<SignInUp\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"login-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleRegisterClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t\t\t\t\t</SignInUp>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<SignInUp\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"login-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={submitForm}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t\t\t\t</SignInUp>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n\r\nLoginForm.propTypes = {\r\n\tadminRoute: PropTypes.bool,\r\n\thandleSubmit: PropTypes.func.isRequired,\r\n};\r\nLoginForm.defaultProps = {\r\n\tadminRoute: false,\r\n};\r\n","import React from 'react';\r\nimport { ErrorMessage } from 'formik';\r\nimport { InputField } from 'components/material-fields';\r\n\r\nconst style = {\r\n\tinput: {\r\n\t\tpadding: '5px 10px',\r\n\t},\r\n};\r\nconst UserForm = ({ inputStyle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"email\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\tautoFocus\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t/>\r\n\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tlabel=\"Username\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"username\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"phone\"\r\n\t\t\t\tname=\"phone\"\r\n\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"phone\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"city\"\r\n\t\t\t\tname=\"city\"\r\n\t\t\t\tlabel=\"City\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"city\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"state\"\r\n\t\t\t\tname=\"state\"\r\n\t\t\t\tlabel=\"State\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"state\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\r\n\t\t\t<InputField\r\n\t\t\t\tid=\"zip\"\r\n\t\t\t\tname=\"zip\"\r\n\t\t\t\tlabel=\"Zip\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tstyle={inputStyle ? inputStyle : style.input}\r\n\t\t\t\tlabelClassName={inputStyle && 'noactive'}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage\r\n\t\t\t\tname=\"zip\"\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\tstyle={{ color: inputStyle ? 'orange' : 'red', marginBottom: inputStyle && '30px' }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default UserForm;\r\n","import React from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport './assets/app.scss';\r\n\r\nimport './App.css';\r\nimport { RoutesWithLayout } from 'components';\r\n// import StoreRouting from 'views/store/StoreRouting';\r\n\r\nimport allRoutes from 'routes';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<RoutesWithLayout routes={allRoutes} />\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}